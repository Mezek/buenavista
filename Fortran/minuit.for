      SUBROUTINE MINUIT
      CALL MINNEW
      RETURN
      END
      DOUBLE PRECISION FUNCTION CALFCN(PVEC)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
CC        CALLED ONLY FROM IMPROV.  TRANSFORMS THE FUNCTION FCN
CC        BY DIVIDING OUT THE QUADRATIC PART IN ORDER TO FIND FURTHER
CC        MINIMA.    CALCULATES  (F-FMIN)/(X-XMIN)*V*(X-XMIN)
CC
      COMMON
     1/MINERR/ ERP(30)     ,ERN(30)
     2/PARINT/ X(15)       ,XT(15)     ,DIRIN(15)  ,MAXINT     ,NPAR
     3/PAREXT/ U(30)       ,NAM(30)    ,WERR(30)   ,MAXEXT     ,NU
     4/LIMITS/ ALIM(30)    ,BLIM(30)   ,LCODE(30)  ,LCORSP(30) ,LIMSET
     5/VARIAN/ V(15,15)
     7 /FIX/    XS(15),   XTS(15),   WTS(15),   IPFIX(15),   NPFIX
     C/CASC/ JH, JL, Y(16)
     F/DERIVA/ G(30)       ,G2(30)
     G/SIMVEC/ P(15,16)    ,PSTAR(15)  ,PSTST(15)  ,PBAR(15)   ,PRHO(15)
     J/VARIAT/ VT(15,15)
      COMMON
     6/UNIT/  ISYSRD,ISYSWR,ISYSPU
     8/TITLE/ TITLE(13),DATE(2),ISW(7),NBLOCK
     9/CONVER/ EPSI,APSI,VTEST,NSTEPQ,NFCN,NFCNMX
     A/CARD/ CWORD,CWORD2,CWORD3,WORD7(7)
     B/MINIMA/ AMIN,UP,NEWMIN,ITAUR,SIGMA
      DIMENSION PVEC(15)
      CALL INTOEX(PVEC)
      CALL FCN(NPAR,G,F,U,4)
      NFCN = NFCN + 1
      DO 200 I= 1, NPAR
      G(I) = 0.
      DO 200 J= 1, NPAR
  200 G(I) = G(I) + VT(I,J) * (XT(J)-PVEC(J))
      DENOM = 0.
      DO 210 I= 1, NPAR
  210 DENOM = DENOM + G(I) * (XT(I)-PVEC(I))
      IF (DENOM .LE. 0.)  ISW(2) = 0
      IF (DENOM .LE. 0.)  DENOM = 1.D0
      CALFCN = (F-APSI) / DENOM
      RETURN
      END
      SUBROUTINE COMAND
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
CC        READS THE COMMAND CARDS AND TAKES APPROPRIATE ACTION,
CC        EITHER DIRECTLY BY SKIPPING TO THE CORRESPONDING CODE IN
CC        COMAND, OR BY SETTING UP A CALL TO A SUBROUTINE
CC
      COMMON
     1/MINERR/ ERP(30)     ,ERN(30)
     2/PARINT/ X(15)       ,XT(15)     ,DIRIN(15)  ,MAXINT     ,NPAR
     3/PAREXT/ U(30)       ,NAM(30)    ,WERR(30)   ,MAXEXT     ,NU
     4/LIMITS/ ALIM(30)    ,BLIM(30)   ,LCODE(30)  ,LCORSP(30) ,LIMSET
     5/VARIAN/ V(15,15)
     7 /FIX/    XS(15),   XTS(15),   WTS(15),   IPFIX(15),   NPFIX
     C/CASC/ JH, JL, Y(16)
     F/DERIVA/ G(30)       ,G2(30)
     G/SIMVEC/ P(15,16)    ,PSTAR(15)  ,PSTST(15)  ,PBAR(15)   ,PRHO(15)
     J/VARIAT/ VT(15,15)
      COMMON
     6/UNIT/  ISYSRD,ISYSWR,ISYSPU
     8/TITLE/ TITLE(13),DATE(2),ISW(7),NBLOCK
     9/CONVER/ EPSI,APSI,VTEST,NSTEPQ,NFCN,NFCNMX
     A/CARD/ CWORD,CWORD2,CWORD3,WORD7(7)
     B/MINIMA/ AMIN,UP,NEWMIN,ITAUR,SIGMA
      DIMENSION CNAME(30),CNAM2(30),CNAM3(30)
      DIMENSION WORD8(8), GF(30)
      EQUIVALENCE (WORD8(1), CWORD3)
      DATA AGOOD,ABAD,ANONE/4HGOOD, 4H BAD, 4HNONE /
      DATA CNAME( 1),CNAM2( 1),CNAM3( 1)/4HMINI, 4HMIZE, 2H  /
      DATA CNAME( 2),CNAM2( 2),CNAM3( 2)/4HSEEK, 4H    , 2H  /
      DATA CNAME( 3),CNAM2( 3),CNAM3( 3)/4HSIMP, 4HLEX , 2H  /
      DATA CNAME( 4),CNAM2( 4),CNAM3( 4)/4HMIGR, 4HAD  , 2H  /
      DATA CNAME( 5),CNAM2( 5),CNAM3( 5)/4HMINO, 4HS   , 2H  /
      DATA CNAME( 6),CNAM2( 6),CNAM3( 6)/4HPUNC, 4HH   , 2H  /
      DATA CNAME( 7),CNAM2( 7),CNAM3( 7)/4HPRIN, 4HTOUT, 2H  /
      DATA CNAME( 8),CNAM2( 8),CNAM3( 8)/4HEND , 4H    , 2H  /
      DATA CNAME( 9),CNAM2( 9),CNAM3( 9)/4HFIX , 4H    , 2H  /
      DATA CNAME(10),CNAM2(10),CNAM3(10)/4HREST, 4HORE , 2H  /
      DATA CNAME(11),CNAM2(11),CNAM3(11)/4HEXIT, 4H    , 2H  /
      DATA CNAME(12),CNAM2(12),CNAM3(12)/4HGRAD, 4HIENT, 2H  /
      DATA CNAME(13),CNAM2(13),CNAM3(13)/4HCALL, 4H FCN, 2H  /
      DATA CNAME(14),CNAM2(14),CNAM3(14)/4HMATO, 4HUT  , 2H  /
      DATA CNAME(15),CNAM2(15),CNAM3(15)/4HCOVA, 4HRIAN, 2HCE/
      DATA CNAME(16),CNAM2(16),CNAM3(16)/4HIMPR, 4HOVE , 2H  /
      DATA CNAME(17),CNAM2(17),CNAM3(17)/4HERRO, 4HR DE, 2HF /
      DATA CNAME(18),CNAM2(18),CNAM3(18)/4H    , 4H    , 2H  /
      DATA CNAME(19),CNAM2(19),CNAM3(19)/4HHESS, 4HE   , 2H  /
      DATA CNAME(20),CNAM2(20),CNAM3(20)/4HCONT, 4HOUR , 2H  /
      DATA CNAME(21),CNAM2(21),CNAM3(21)/4HSTAN, 4HDARD, 2H  /
      DATA CNAME(22),CNAM2(22),CNAM3(22)/4HRELE, 4HASE , 2H  /
      DATA CNAME(23),CNAM2(23),CNAM3(23)/4HHELP, 4H    , 2H  /
      DATA CNAME(24),CNAM2(24),CNAM3(24)/4HSCAN, 4H    , 2H  /
      DATA CNAME(25),CNAM2(25),CNAM3(25)/4HPARA, 4HMETE, 2HR /
      DATA CNAME(26),CNAM2(26),CNAM3(26)/4HLIMI, 4HTS  , 2H  /
      DATA CNAME(27),CNAM2(27),CNAM3(27)/4HSET , 4HPARA, 2HM /
      DATA CNAME(28),CNAM2(28),CNAM3(28)/4H    , 4H    , 2H  /
      DATA CNAME(29),CNAM2(29),CNAM3(29)/4H    , 4H    , 2H  /
      DATA CNAME(30),CNAM2(30),CNAM3(30)/4HEND , 4HRETU, 2HRN/
      DATA NNAME/30/
      IKARD = 0
   50 IKARD = IKARD + 1
      IF (ISW(6) .EQ. 1)  WRITE (ISYSWR,5017)
      READ (ISYSRD,5000)  CWORD,CWORD2,CWORD3,WORD7
      K = 1
      DO 60 I= 1, 7
      IF (WORD7(I))  58,60,58
   58 K = I + 1
   60 CONTINUE
      IF (CWORD .EQ. CNAME(5))  K = 2
      WRITE (ISYSWR,5001) IKARD,CWORD,CWORD2,(WORD8(I),I=1,K)
      WRITE (ISYSWR,5004)
      NFCNMX = WORD7(1) + 0.5
      IF (NFCNMX .LE. 0)  NFCNMX = 1000
      EPSI = WORD7(2)
      IF (EPSI .LE. 0.)  EPSI = 0.1D0 * UP
      NEWMIN = 0
      ITAUR = 0
      ISW(1) = 0
      DO 80 I= 1, NNAME
      IF (CWORD .EQ. CNAME(I))  GO TO 90
   80 CONTINUE
      WRITE (ISYSWR,5006)
      GO TO 50
C              1    2    3    4    5    6    7    8    9   10
   90 GO TO ( 100, 200, 300, 400, 500, 600, 700,1100, 900,1000,
     1       1100,1200,1300,1400,1500,1600,1700,1800,1402,2000,
     2       2100,2200,2300,2400,2500,2600,2700,2800,2900,3000) , I
C                                        . . . . . . . . NEW MINIMUM
   95 WRITE (ISYSWR,5011)
      ITAUR = 0
      EPSI = 0.1D0*UP
C                                        . . . . . . . . . . MINIMIZE
  100 NF = NFCN
      CALL SIMPLX
      IF (ISW(1) .GE. 1)  GO TO 50
      NFCNMX = NFCNMX + NF - NFCN
  150 VTEST = 0.04D0
      GO TO 460
C                                        . . . . . . . . . . SEEK
  200 CALL SEEK
      GO TO 50
C                                        . . . . . . . . . . SIMPLEX
  300 CALL SIMPLX
      GO TO 50
C                                        . . . . . . . . . . MIGRAD
  400 VTEST = WORD7(3)
      IF (VTEST .LE. 0.0D0)  VTEST = 0.01D0
  460 NF = NFCN
      APSI = EPSI
      CALL MIGRAD
      IF (ISW(2) .GT. 2)  GO TO  50
      IF (ISW(1) .EQ. 1)  GO TO 50
      NFCNMX = NFCNMX + NF - NFCN
      NF = NFCN
      CALL SIMPLX
      IF (ISW(1) .EQ. 1)  GO TO 50
      NFCNMX = NFCNMX + NF - NFCN
      CALL MIGRAD
      GO TO 50
C                                        . . . . . . . . . . MINOS
  500 IF (ISW(2) .LT. 1)  GO TO 550
      EPSI = 0.1D0 * UP
      VTEST = 0.10D0
      CALL MINOS
      IF (NEWMIN .LT. 1)  GO TO 50
      GO TO 95
  550 WRITE (ISYSWR,5006)
  555 WRITE (ISYSWR,5007)
      GO TO 50
C                                        . . . . . . . . . . PUNCH
  600 CALL MPUNCH
      GO TO 50
C                                        . . . . . . . . . . PRINTOUT
  700 ISW(5) = WORD7(1) + 0.5D0
      GO TO 50
C                                        . . . . . . . . . . FIX
  900 IT = WORD7(1) + 0.5D0
      CALL FIXPAR(IT, 0, ILAX)
      IF (ISW(2).GT.1 .AND. ILAX.NE.0)  CALL MPRINT(1,AMIN)
      GO TO 50
C                                        . . . . . . . . . . RESTORE
 1000 IT = WORD7(1) + 0.5D0
      CALL RESTOR(IT)
      GO TO 50
C                                        . . . . . . . . . . END, EXIT
 1100 IT = WORD7(1) + 0.5D0
      IF (ISW(4) .EQ. 1 .OR. IT .GT. 0)  GO TO 1150
      IFLAG = 3
      WRITE (ISYSWR,5009)
      CALL FCN(NPAR,G,F,U,IFLAG)
      NFCN = NFCN + 1
 1150 IF (I .EQ. 11)  STOP
      RETURN
C                                        . . . . . . . . . . GRADIENT
 1200 ISW(3) = 1
      IF (WORD7(1) .GT. 0.0D0)  GO TO 50
      DO 1230 I= 1, NU
 1230 GF(I) = 0.0D0
      CALL INTOEX(X)
      CALL FCN(NPAR,GF,AMIN,U,2)
      NFCN = NFCN + 1
      CALL DERIVE(GF,G2)
      ISW(3) = 0
      CALL DERIVE(G, G2)
      WRITE (ISYSWR,5013)
      ISW(3) = 1
      DO 1250 I= 1, NU
      LC = LCORSP(I)
      IF (LC .EQ. 0)  GO TO 1250
      AWD = AGOOD
      IF (ABS(GF(LC)-G(LC)) .GT. ABS(G2(LC)))  AWD = ABAD
      IF (GF(LC) .EQ. 0.D0)  AWD = ANONE
      IF (AWD .NE. AGOOD)  ISW(3) = 0
      WRITE(ISYSWR,5014) I,NAM(I),GF(LC),G(LC),G2(LC),AWD
 1250 CONTINUE
      IF (ISW(3) .EQ. 0)  WRITE (ISYSWR,5015)
      GO TO 50
C                                        . . . . . . . . . . CALL FCN
 1300 IFLAG = WORD7(1)
      IF (IFLAG .EQ. 3)  ISW(4) = 1
      CALL FCN(NPAR,G,F,U,IFLAG)
      NFCN = NFCN + 1
      IF(IFLAG.LE.5) GO TO 50
      CALL EXTOIN(X)
      CALL FCN(NPAR,G,AMIN,U,4)
      NFCN=NFCN+1
      IF (ISW(2) .LE. 1)  GO TO 1350
      ISW(2) = 1
      WRITE (ISYSWR, 5010)
 1350 CALL MPRINT(1,AMIN)
      GO TO 50
C                                        . . . . . . . . . . MATOUT
 1400 IF(ISW(2).GE.2) GO TO 1405
C                                        . . . . . . . . . . HESSE
 1402 CALL HESSE
      CALL MPRINT(1, AMIN)
 1405 CALL MATOUT(0.0D0 , 1)
      GO TO 50
C                                        . . . . . . . . . . COVARIANCE
 1500 NRAPE = WORD7(1) + 0.5D0
      IF (NRAPE .NE. NPAR)  GO TO 1550
      READ (ISYSRD,5002)  ((V(I,J),I=1,NRAPE),J=1,NRAPE)
      ISW(2) = 3
      CALL MATOUT(0.0D0 , 1)
      CALL MPRINT(1,AMIN)
      GO TO 50
 1550 WRITE (ISYSWR,5006)
      WRITE (ISYSWR,5008)
      NRAP2 = NRAPE**2
      READ (ISYSRD,5002)  (G(1),I=1,NRAP2)
      GO TO 50
C                                        . . . . . . . . . . IMPROVE
 1600 CONTINUE
      IF (ISW(2) .LT. 2)  GO TO 550
      CALL IMPROV
      IF (NEWMIN .EQ. 1)  GO TO 150
      GO TO 50
C                                        . . . . . . . . . . ERROR DEF
 1700 CONTINUE
      UP = WORD7(1)
      IF (UP .LE. 0.)  UP = 1.0D0
      IF (ISW(2) .GE. 1)  CALL MPRINT(1,AMIN)
      GO TO 50
C                                       . . . . . . . . . .BLANK CARD
 1800 CONTINUE
      GO TO 50
C                                        . . . . . . . . . . CONTOUR
 2000 CONTINUE
      IF (ISW(2) .LT. 1)  GO TO 550
      KE1 = WORD7(1)
      KE2 = WORD7(2)
      IF (KE1.LE.0 .OR. KE2.LE.0)  GO TO 2750
      IF (KE1.GT.NU .OR. KE2.GT.NU)  GO TO 2750
      IF (LCORSP(KE1).LE.0 .OR. LCORSP(KE2).LE.0)  GO TO 2750
      NFCNMX = 1000
      CALL CONTOU
      CALL MPRINT(1,AMIN)
      IF (NEWMIN .LE. 0)  GO TO 50
      GO TO 95
C                                        . . . . . . . . . . STANDARD
 2100 CALL STAND
      GO TO 50
C                                        . . . . . . . . . . RELEASE
 2200 CONTINUE
      DO 2220 IRL=1,7
      KRL = WORD7(IRL)
      IF (KRL .EQ. 0)  GO TO 50
      KRL = -IABS(KRL)
      CALL RESTOR(KRL)
 2220 CONTINUE
      GO TO 50
C                                       . . . . . . . .HELP  . . . .
 2300 CONTINUE
      WRITE (ISYSWR,5016)  (CNAME(I),CNAM2(I),CNAM3(I),I=1,30)
      GO TO 50
C                                       . . . . . . . . . . SCAN . . .
 2400 CONTINUE
      IT = WORD7(1) + 0.5D0
      IF (IT .LE. 0)  GO TO 2410
      IT2 = 0
      IF (IT .LE. NU)  IT2 = LCORSP(IT)
      IF (IT2 .LE. 0)  GO TO 2750
 2410 CALL MSCAN
      GO TO 50
C                                       . . . . . . . . . PARAMETER
 2500 CONTINUE
      CALL MIDAT2
      WRITE (ISYSWR,5010)
      CALL INTOEX(X)
      CALL FCN(NPAR,G,AMIN,U,4)
      CALL MPRINT(1,AMIN)
      GO TO 50
C                                       . . . . . . . . . . LIMITS
 2600 CONTINUE
      DO 2650 I2= 1, NU
      IF (LCODE(I2) .EQ. 0)  GO TO 2650
      IF (NFCNMX .GT. MAXEXT)  GO TO 2640
      IF (NFCNMX .NE. I2)  GO TO 2650
 2640 IF (WORD7(2) .NE. WORD7(3))  GO TO 2645
      IF (LCODE(I2) .NE. 1)  WRITE (ISYSWR,5018)  I2
      LCODE(I2) = 1
      GO TO 2650
 2645 ALIM(I2) = AMIN1(WORD7(2),WORD7(3))
      BLIM(I2) = AMAX1(WORD7(2),WORD7(3))
      WRITE (ISYSWR,5019)  I2,ALIM(I2),BLIM(I2)
      LCODE(I2) = 4
 2650 CONTINUE
      CALL EXTOIN(X)
      CALL MPRINT(1,AMIN)
      GO TO 50
C                                       . . . . . . SET PARAM . . .
 2700 CONTINUE
      IF (NFCNMX .GT. NU)  GO TO 2750
      U(NFCNMX) = WORD7(2)
      CALL EXTOIN(X)
      CALL FCN(NPAR,G,AMIN,U,4)
      NFCN=NFCN + 1
      WRITE (ISYSWR,5010)
      ISW(2) = 1
      CALL MPRINT(1,AMIN)
      GO TO 50
 2750 WRITE (ISYSWR,5012)
      GO TO 50
C                                       . . . . . . . NOT YET USED
 2800 CONTINUE
 2900 CONTINUE
 3000 CONTINUE
      GO TO 50
 5000 FORMAT (2A4, A2, 7F10.0)
 5001 FORMAT (1H ,10(1H*)/1H ,3H*** ,I3,4H****,2A4,A2,7F15.5)
 5002 FORMAT (7F10.0,10X)
 5004 FORMAT (1H ,10(1H*))
 5005 FORMAT (1H1)
 5006 FORMAT (1H+,10X  ,17H(COMMAND IGNORED))
 5007 FORMAT ( 118H0THE ABOVE COMMAND CANNOT BE EXECUTED BECAUSE COVARIA
     1NCE MATRIX WAS NEITHER CALCULATED NOR SUPPLIED, OR WAS DESTROYED./
     2/)
 5008 FORMAT( 102H SIZE OF COVARIANCE MATRIX TO BE READ DOES NOT CORRESP
     1OND  TO NUMBER OF CURRENTLY VARIABLE PARAMETERS./)
 5009 FORMAT (  28H0CALL TO FCN WITH IFLAG = 3 /)
 5010 FORMAT (  51H NEW START POINT ASSUMED     COVARIANCE MATRIX LOST)
 5011 FORMAT (  50H0NEW MINIMUM FOUND.  GO BACK TO MINIMIZATION STEP./1H
     + ,         60(1H=)/60X,1HV/60X,1HV/60X,1HV/57X,7HVVVVVVV/58X,5HVVV
     +VV/59X          ,3HVVV/60X,1HV///)
 5012 FORMAT (50H ILLEGAL PARAMETER NUMBER REQUESTED.  IGNORED.    /)
 5013 FORMAT (  37H0CHECK OF GRADIENT CALCULATION IN FCN ,12X    ,9HPARA
     +METER         ,6X    ,9HG(IN FCN) ,3X    ,9HG(MINUIT) ,4X    ,5HER
     +ROR ,5X    ,9HAGREEMENT)
 5014 FORMAT (45X ,I5,2X ,A10,3E12.4,4X ,A4)
 5015 FORMAT (  54H0MINUIT DOES NOT ACCEPT DERIVATIVE CALCULATIONS BY FC
     1N)
 5016 FORMAT (8(2X,A4,A4,A2))
 5017 FORMAT (20H0NEXT COMMAND...     )
 5018 FORMAT (30H LIMITS REMOVED FROM PARAMETER  ,I4)
 5019 FORMAT (10H PARAMETER ,I3, 14H LIMITS SET TO  ,2G15.5)
      END
      SUBROUTINE CONTOU
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
CC        VERSION OF NOV. 1976 INVOKES CERN PACKAGE J509
CC        TO PRINT FUNCTION CONTOURS IN TWO VARIABLES, ON LINE PRINTER
CC
      COMMON
     1/MINERR/ ERP(30)     ,ERN(30)
     2/PARINT/ X(15)       ,XT(15)     ,DIRIN(15)  ,MAXINT     ,NPAR
     3/PAREXT/ U(30)       ,NAM(30)    ,WERR(30)   ,MAXEXT     ,NU
     4/LIMITS/ ALIM(30)    ,BLIM(30)   ,LCODE(30)  ,LCORSP(30) ,LIMSET
     5/VARIAN/ V(15,15)
     7 /FIX/    XS(15),   XTS(15),   WTS(15),   IPFIX(15),   NPFIX
     C/CASC/ JH, JL, Y(16)
     F/DERIVA/ G(30)       ,G2(30)
     G/SIMVEC/ P(15,16)    ,PSTAR(15)  ,PSTST(15)  ,PBAR(15)   ,PRHO(15)
     J/VARIAT/ VT(15,15)
      COMMON
     6/UNIT/  ISYSRD,ISYSWR,ISYSPU
     8/TITLE/ TITLE(13),DATE(2),ISW(7),NBLOCK
     9/CONVER/ EPSI,APSI,VTEST,NSTEPQ,NFCN,NFCNMX
     A/CARD/ CWORD,CWORD2,CWORD3,WORD7(7)
     B/MINIMA/ AMIN,UP,NEWMIN,ITAUR,SIGMA
      EXTERNAL D506FN
      DIMENSION CONTUR(10)
      DEVS = WORD7(3)
      IF (DEVS .LE. 0.D0)  DEVS=2.5D0
      IF (DEVS .LT. 0.1D0)  DEVS=0.1D0
      IF (DEVS .GT. 9.D0)  DEVS=9.D0
      NUMBCS = 10
      I1 = WORD7(1) + 0.001D0
      I2 = WORD7(2) + 0.001D0
      XLO = U(I1) - DEVS*WERR(I1)
      XUP = U(I1) + DEVS*WERR(I1)
      YLO = U(I2) - DEVS*WERR(I2)
      YUP = U(I2) + DEVS*WERR(I2)
      NXA = 36.D0*SQRT(DEVS)
      NYA = 30.D0*SQRT(DEVS)
      CALL BINSIZ(XLO,XUP,NXA,XLO,XUP,NX,BWIDX)
      CALL BINSIZ(YLO,YUP,NYA,YLO,YUP,NY,BWIDY)
      NX = NX + 12
      NY = NY + 4
C         ASK IF PARAMETER OUTSIDE LIMITS
      IF (LCODE(I1) .LE. 1)  GO TO 120
      IF (XLO .LT. ALIM(I1))  XLO = ALIM(I1)
      IF (XUP .GT. BLIM(I1))  XUP = BLIM(I1)
  120 CONTINUE
      IF (LCODE(I2) .LE. 1)  GO TO 140
      IF (YLO .LT. ALIM(I2))  YLO = ALIM(I2)
      IF (YUP .GT. BLIM(I2))  YUP = BLIM(I2)
  140 CONTINUE
      CALL PAPER(NX,NY)
      CALL FRAME(XLO,YLO,XUP,YUP)
      CALL NAMES(NAM(I1),NAM(I2))
      DO 185 I= 1, NUMBCS
      CONTUR(I) = AMIN + UP*FLOAT(I-1)**2
  185 CONTINUE
      CONTUR(1) = CONTUR(1) + 0.01D0*UP
      CALL CONT(D506FN,NUMBCS,CONTUR)
      CALL INTOEX(X)
      RETURN
      END
      DOUBLE PRECISION FUNCTION D506FN(XX,YY)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      COMMON
     2/PARINT/ X(15),XT(15),DIRIN(15),MAXINT,NPAR
     3/PAREXT/ U(30),NAM(30),WERR(30),MAXEXT,NU
     9/CONVER/ EPSI,APSI,VTEST,NSTEPQ,NFCN,NFCNMX
     F/DERIVA/ G(30),G2(30)
     A/CARD / CWORD,CWORD2,CWORD3,WORD7(7)
      I1 = WORD7(1) + 0.001D0
      I2 = WORD7(2) + 0.001D0
      U(I1) = XX
      U(I2) = YY
      NFCN = NFCN + 1
      CALL FCN(NPAR,G,F,U,4)
      D506FN = F
      RETURN
      END
      SUBROUTINE  DERIVE(GG,GG2)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
CC        CALCULATES THE FIRST DERIVATIVES OF FCN (GG),
CC        EITHER BY FINITE DIFFERENCES OR BY TRANSFORMING THE USER-
CC        SUPPLIED DERIVATIVES TO INTERNAL COORDINATES,
CC        ACCORDING TO WHETHER ISW(3) IS ZERO OR ONE.
CC        IF ISW(3) = 0, AN ERROR ESTIMATE GG2  IS AVAILABLE
CC
      COMMON
     1/MINERR/ ERP(30)     ,ERN(30)
     2/PARINT/ X(15)       ,XT(15)     ,DIRIN(15)  ,MAXINT     ,NPAR
     3/PAREXT/ U(30)       ,NAM(30)    ,WERR(30)   ,MAXEXT     ,NU
     4/LIMITS/ ALIM(30)    ,BLIM(30)   ,LCODE(30)  ,LCORSP(30) ,LIMSET
     5/VARIAN/ V(15,15)
     7 /FIX/    XS(15),   XTS(15),   WTS(15),   IPFIX(15),   NPFIX
     C/CASC/ JH, JL, Y(16)
     F/DERIVA/ G(30)       ,G2(30)
     G/SIMVEC/ P(15,16)    ,PSTAR(15)  ,PSTST(15)  ,PBAR(15)   ,PRHO(15)
     J/VARIAT/ VT(15,15)
      COMMON
     6/UNIT/  ISYSRD,ISYSWR,ISYSPU
     8/TITLE/ TITLE(13),DATE(2),ISW(7),NBLOCK
     9/CONVER/ EPSI,APSI,VTEST,NSTEPQ,NFCN,NFCNMX
     A/CARD/ CWORD,CWORD2,CWORD3,WORD7(7)
     B/MINIMA/ AMIN,UP,NEWMIN,ITAUR,SIGMA
      DIMENSION GG(30),GG2(15),GY(30)
      DATA EPSMAC/1.0D-5/
      IF (ISW(3) .EQ. 1)  GO TO 100
      IFLAG = 4
      DO 46  I=1,NPAR
      EPS = 0.1D0 * ABS(DIRIN(I))
      IF (ISW(2) .GE. 1) EPS = EPS + 0.005D0*SQRT(V(I,I)*UP)
      IF (EPS .LT. EPSMAC*ABS(X(I)))  EPS= EPSMAC*X(I)
      XTF = X(I)
      X(I) = XTF + EPS
      CALL INTOEX(X)
      CALL FCN(NPAR,GY,FS1,U ,IFLAG)
      NFCN=NFCN+1
      X(I) = XTF - EPS
      CALL INTOEX(X)
      CALL FCN(NPAR,GY,FS2,U,IFLAG)
      NFCN=NFCN+1
C                                        . . . . . . .  FIRST DERIVATIVE
      GG(I)= (FS1-FS2)/(2.0D0*EPS)
C                                        . . . ERROR ON FIRST DERIVATIVE
      GG2(I)= (FS1+FS2-2.0D0*AMIN)/(2.0D0*EPS)
      X(I) = XTF
   46 CONTINUE
      CALL INTOEX(X)
      GO TO 200
C                                        .  DERIVATIVES CALC BY FCN
  100 DO 150 I= 1, NU
      LC=LCORSP(I)
      IF (LC .LT. 1)  GO TO 150
      IF (LCODE(I) .GT. 1)  GO TO 120
      GG(LC)=GG(I)
      GO TO 150
  120 DD = (BLIM(I)-ALIM(I))*0.5D0*COS(X(LC))
      GG(LC)=GG(I)*DD
  150 CONTINUE
  200 RETURN
      END
      DOUBLE PRECISION FUNCTION DEXDIN(PINT,IPAR)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
CC        CALCULATES THE TRANSFORMATION FACTOR BETWEEN EXTERNAL AND
CC        INTERNAL PARAMETER VALUES.     THIS FACTOR IS ONE FOR
CC        PARAMETERS WHICH ARE NOT LIMITED.     CALLED FROM EMATX.
      COMMON
     1/MINERR/ ERP(30)     ,ERN(30)
     2/PARINT/ X(15)       ,XT(15)     ,DIRIN(15)  ,MAXINT     ,NPAR
     3/PAREXT/ U(30)       ,NAM(30)    ,WERR(30)   ,MAXEXT     ,NU
     4/LIMITS/ ALIM(30)    ,BLIM(30)   ,LCODE(30)  ,LCORSP(30) ,LIMSET
     5/VARIAN/ V(15,15)
     7 /FIX/    XS(15),   XTS(15),   WTS(15),   IPFIX(15),   NPFIX
     C/CASC/ JH, JL, Y(16)
     F/DERIVA/ G(30)       ,G2(30)
     G/SIMVEC/ P(15,16)    ,PSTAR(15)  ,PSTST(15)  ,PBAR(15)   ,PRHO(15)
     J/VARIAT/ VT(15,15)
      COMMON
     6/UNIT/  ISYSRD,ISYSWR,ISYSPU
     8/TITLE/ TITLE(13),DATE(2),ISW(7),NBLOCK
     9/CONVER/ EPSI,APSI,VTEST,NSTEPQ,NFCN,NFCNMX
     A/CARD/ CWORD,CWORD2,CWORD3,WORD7(7)
     B/MINIMA/ AMIN,UP,NEWMIN,ITAUR,SIGMA
      DO 50 I= 1, NU
      IF (LCORSP(I) .EQ. IPAR)  GO TO 100
   50 CONTINUE
      DEXDIN = 0.0D0
      RETURN
  100 IF (LCODE(I) .GT. 1)  GO TO 200
      DEXDIN = 1.0D0
      RETURN
  200 DEXDIN = 0.5D0*(BLIM(I)-ALIM(I)) * COS(PINT)
      DEXDIN = ABS(DEXDIN)
      RETURN
      END
      SUBROUTINE EMATX(EMAT,NDIM)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION EMAT(NDIM,NDIM)
CC        CALCULATES THE EXTERNAL ERROR MATRIX FROM THE INTERNAL
CC        TO BE CALLED BY USER, WHO MUST DIMENSION EMAT AT (NDIM,NDIM)
      COMMON
     1/MINERR/ ERP(30)     ,ERN(30)
     2/PARINT/ X(15)       ,XT(15)     ,DIRIN(15)  ,MAXINT     ,NPAR
     3/PAREXT/ U(30)       ,NAM(30)    ,WERR(30)   ,MAXEXT     ,NU
     4/LIMITS/ ALIM(30)    ,BLIM(30)   ,LCODE(30)  ,LCORSP(30) ,LIMSET
     5/VARIAN/ V(15,15)
     7 /FIX/    XS(15),   XTS(15),   WTS(15),   IPFIX(15),   NPFIX
     C/CASC/ JH, JL, Y(16)
     F/DERIVA/ G(30)       ,G2(30)
     G/SIMVEC/ P(15,16)    ,PSTAR(15)  ,PSTST(15)  ,PBAR(15)   ,PRHO(15)
     J/VARIAT/ VT(15,15)
      COMMON
     6/UNIT/  ISYSRD,ISYSWR,ISYSPU
     8/TITLE/ TITLE(13),DATE(2),ISW(7),NBLOCK
     9/CONVER/ EPSI,APSI,VTEST,NSTEPQ,NFCN,NFCNMX
     A/CARD/ CWORD,CWORD2,CWORD3,WORD7(7)
     B/MINIMA/ AMIN,UP,NEWMIN,ITAUR,SIGMA
      IF (ISW(2) .LT. 1)  RETURN
      IF (ISW(5) .GE. 1)  WRITE (ISYSWR,160)    NDIM,NPAR
      NPARD = MIN0(NPAR,NDIM)
      DO 110 I= 1, NPARD
      DO 100 J= 1, NPARD
      EMAT(I,J) = DEXDIN(X(I),I) * V(I,J) * DEXDIN(X(J),J)
  100 CONTINUE
      IF (ISW(5) .GE. 1)  WRITE (ISYSWR,150) (V(I,KK),KK=1,NPAR)
  110 CONTINUE
  150 FORMAT (1X,10F13.6)
  160 FORMAT (54H0  EXTERNAL ERROR MATRIX CALCULATED BY EMATX.     NDIM,
     1  I4, 10H      NPAR, I3)
      RETURN
      END
      SUBROUTINE EXTOIN(PINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
CC        TRANSFORMS THE EXTERNAL PARAMETER VALUES X  TO INTERNAL
CC        VALUES IN THE DENSE ARRAY PINT.   FUNCTION PINTF IS USED.
CC
      COMMON
     1/MINERR/ ERP(30)     ,ERN(30)
     2/PARINT/ X(15)       ,XT(15)     ,DIRIN(15)  ,MAXINT     ,NPAR
     3/PAREXT/ U(30)       ,NAM(30)    ,WERR(30)   ,MAXEXT     ,NU
     4/LIMITS/ ALIM(30)    ,BLIM(30)   ,LCODE(30)  ,LCORSP(30) ,LIMSET
     5/VARIAN/ V(15,15)
     7 /FIX/    XS(15),   XTS(15),   WTS(15),   IPFIX(15),   NPFIX
     C/CASC/ JH, JL, Y(16)
     F/DERIVA/ G(30)       ,G2(30)
     G/SIMVEC/ P(15,16)    ,PSTAR(15)  ,PSTST(15)  ,PBAR(15)   ,PRHO(15)
     J/VARIAT/ VT(15,15)
      COMMON
     6/UNIT/  ISYSRD,ISYSWR,ISYSPU
     8/TITLE/ TITLE(13),DATE(2),ISW(7),NBLOCK
     9/CONVER/ EPSI,APSI,VTEST,NSTEPQ,NFCN,NFCNMX
     A/CARD/ CWORD,CWORD2,CWORD3,WORD7(7)
     B/MINIMA/ AMIN,UP,NEWMIN,ITAUR,SIGMA
      DIMENSION PINT(1)
      LIMSET=0
      DO 100  I= 1, NU
      J = LCORSP(I)
      IF ( J )  100,100,50
   50 PINT(J) = PINTF(U(I),I)
  100 CONTINUE
      RETURN
      END
      SUBROUTINE FIXPAR(I2,KODE,ILAX)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
CC        REMOVES PARAMETER I2 FROM THE INTERNAL (VARIABLE) PARAMETER
CC        LIST, AND ARRANGES THE REST OF THE LIST TO FILL THE HOLE.
CC        IF KODE=0, I2 IS AN EXTERNAL NUMBER, OTHERWISE INTERNAL.
CC        ILAX IS RETURNED AS THE EXTERNAL NUMBER OF THE PARAMETER.
CC
      COMMON
     1/MINERR/ ERP(30)     ,ERN(30)
     2/PARINT/ X(15)       ,XT(15)     ,DIRIN(15)  ,MAXINT     ,NPAR
     3/PAREXT/ U(30)       ,NAM(30)    ,WERR(30)   ,MAXEXT     ,NU
     4/LIMITS/ ALIM(30)    ,BLIM(30)   ,LCODE(30)  ,LCORSP(30) ,LIMSET
     5/VARIAN/ V(15,15)
     7 /FIX/    XS(15),   XTS(15),   WTS(15),   IPFIX(15),   NPFIX
     C/CASC/ JH, JL, Y(16)
     F/DERIVA/ G(30)       ,G2(30)
     G/SIMVEC/ P(15,16)    ,PSTAR(15)  ,PSTST(15)  ,PBAR(15)   ,PRHO(15)
     J/VARIAT/ VT(15,15)
      COMMON
     6/UNIT/  ISYSRD,ISYSWR,ISYSPU
     8/TITLE/ TITLE(13),DATE(2),ISW(7),NBLOCK
     9/CONVER/ EPSI,APSI,VTEST,NSTEPQ,NFCN,NFCNMX
     A/CARD/ CWORD,CWORD2,CWORD3,WORD7(7)
     B/MINIMA/ AMIN,UP,NEWMIN,ITAUR,SIGMA
      DIMENSION V1(2),YY(15)
      EQUIVALENCE (V(1,1) , V1(1))
      DATA EPSMAC/1.0D-5/
      IF (KODE)  250,50,150
C                                        . EXT PARAM NO. SPECIFIED
   50 I = I2
      IF (I .GT. NU)  GO TO 70
      IF (I .LT. 1)  GO TO 70
   60 IF (LCORSP(I))  70,70,80
C                               ERROR RETURN   PARAM ALREADY FIXED
   70 ILAX = 0
      WRITE (ISYSWR,500)  I
      GO TO 300
   80 LC = LCORSP(I)
      IT = LC
      LCORSP(I) = 0
      ILAX = I
      NPAR = NPAR - 1
      NPFIX = NPFIX + 1
      IPFIX(NPFIX) = I
      XS(NPFIX) = X(LC)
      XTS(NPFIX) = XT(LC)
      EPS = ABS(DIRIN(LC)) * 10.D0
      IF (ISW(2) .GE. 1)  EPS = EPS + SQRT(ABS(V(LC,LC))*UP)
      IF (EPS .LT. EPSMAC*ABS(X(LC)))  EPS=EPSMAC*X(LC)
      WTS(NPFIX) = EPS*0.1D0
      DO 100  IK= I, NU
      IF (LCORSP(IK))  100,100,85
   85 LC = LCORSP(IK) - 1
      LCORSP(IK) = LC
      X(LC) = X(LC+1)
      XT(LC) = XT(LC+1)
      DIRIN(LC) = DIRIN(LC+1)
  100 CONTINUE
      IF (ISW(2) .GT. 1)  GO TO 250
      ISW(2) = 0
      GO TO 300
C                                        . INT PARAM NO. SPECIFIED
  150 CONTINUE
      DO 200  IQ= 1, NU
      IF (LCORSP(IQ) .NE. I2)  GO TO 200
      I = IQ
      GO TO 60
  200 CONTINUE
      GO TO 70
C         REMOVE ONE ROW AND ONE COLUMN FROM VARIANCE MATRIX
  250 KON = 0
      IF (NPAR .LE. 0)  GO TO 300
      KON2 = 0
      MPAR = NPAR + 1
      DO 260 I= 1, MPAR
  260 YY(I)=V(I,IT)
      DO 294 I= 1, MPAR
      IF (I.EQ.IT)  GO TO 294
      KON2 = KON2 + 1
      DO 292 J= 1, MPAR
      IF (J .EQ. IT)  GO TO 292
      KON = KON + 1
      V1(KON)=V(J,I) - YY(J)*YY(I)/YY(IT)
  292 CONTINUE
      KON = MAXINT*KON2
  294 CONTINUE
C         CHECK FOR WELL-BEHAVED FINAL MATRIX
      DO 295 I= 1, NPAR
      IF (V(I,I) .LE. 0.)  GO TO 296
      DO 295 J= 1, NPAR
      IF (I .EQ. J)  GO TO 295
      IF (V(I,J)**2 .GE. V(I,I)*V(J,J))  V(I,J) = 0.D0
  295 CONTINUE
      GO TO 300
  296 ISW(2) = 0
      WRITE (ISYSWR, 501)
  300 RETURN
  500 FORMAT (  28H0ERROR IN FIXPAR.  PARAMETER,I3,  18H WAS NOT VARIABL
     +E./)
  501 FORMAT (  72H0COVARIANCE MATRIX WAS ILL-CONDITIONED AND HAS BEEN D
     1ESTROYED BY FIXPAR./)
      END
      SUBROUTINE HESSE
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
CC        CALCULATES THE FULL SECOND-DERIVATIVE MATRIX OF FCN
CC        BY TAKING FINITE DIFFERENCES.   INCLUDES SOME SAFEGUARDS
CC        AGAINST NON-POSITIVE-DEFINITE MATRICES, AND IT MAY SET
CC        OFF-DIAGONAL ELEMENTS TO ZERO IN ATTEMPT TO FORCE POSITIVENESS
CC
      COMMON
     1/MINERR/ ERP(30)     ,ERN(30)
     2/PARINT/ X(15)       ,XT(15)     ,DIRIN(15)  ,MAXINT     ,NPAR
     3/PAREXT/ U(30)       ,NAM(30)    ,WERR(30)   ,MAXEXT     ,NU
     4/LIMITS/ ALIM(30)    ,BLIM(30)   ,LCODE(30)  ,LCORSP(30) ,LIMSET
     5/VARIAN/ V(15,15)
     7 /FIX/    XS(15),   XTS(15),   WTS(15),   IPFIX(15),   NPFIX
     C/CASC/ JH, JL, Y(16)
     F/DERIVA/ G(30)       ,G2(30)
     G/SIMVEC/ P(15,16)    ,PSTAR(15)  ,PSTST(15)  ,PBAR(15)   ,PRHO(15)
     J/VARIAT/ VT(15,15)
      COMMON
     6/UNIT/  ISYSRD,ISYSWR,ISYSPU
     8/TITLE/ TITLE(13),DATE(2),ISW(7),NBLOCK
     9/CONVER/ EPSI,APSI,VTEST,NSTEPQ,NFCN,NFCNMX
     A/CARD/ CWORD,CWORD2,CWORD3,WORD7(7)
     B/MINIMA/ AMIN,UP,NEWMIN,ITAUR,SIGMA
      DIMENSION YY(15),GY(30)
      DATA DFWANT,DFZERO,DFMIN,DFMAX/ 0.01, 0.00000001, 0.001, 0.1 /
      WRITE (ISYSWR, 500)
      IFLAG = 4
      NPFN = NFCN
      NPARD = NPAR
C                                        . . . . . . DIAGONAL ELEMENTS .
      MDIAG = 0
      DO 100 ID= 1, NPARD
      I = ID + NPAR - NPARD
      D = 0.02D0*ABS(DIRIN(I))
      IF (ISW(2) .GE. 1)  D = 0.02D0* SQRT(ABS(V(I,I))*UP)
      DIRMIN=DFZERO*ABS(X(I))
      IF (D .LT. DIRMIN)  D = DIRMIN
      DO 20 J= 1, NPAR
   20 V(I,J) = 0.D0
      ICYC = 0
   40 DIRIN(I) = D
      XTF = X(I)
      X(I) = XTF + D
      CALL INTOEX(X)
      CALL FCN(NPAR, GY, FS1, U, IFLAG)
      NFCN = NFCN + 1
      X(I) = XTF - D
      CALL INTOEX(X)
      CALL FCN (NPAR, GY, FS2, U, IFLAG)
      NFCN = NFCN + 1
      X(I) = XTF
C                                        CHECK IF STEP SIZES APPROPRIATE
      ICYC = ICYC + 1
      IF (ICYC .GE. 4)  GO TO 55
      DF = AMAX1(ABS(FS1-AMIN),ABS(FS2-AMIN))/UP
      IF (DF .GT. DFMIN)  GO TO 45
      IF (DF .GT. DFZERO)  GO TO 50
      D = D*1000.D0
      GO TO 40
   45 IF (DF .LT. DFMAX)  GO TO 55
   50 CHAN = SQRT(DFWANT/DF)
      IF (CHAN .LT. 0.001)  CHAN = 0.001
      D = D*CHAN
      GO TO 40
   55 CONTINUE
C                                        GET FIRST AND SECOND DERIVATIVE
      G(I) = (FS1-FS2)/(2.0D0 * D)
      G2(I) = (FS1 + FS2 - 2.0D0*AMIN) / D**2
      YY(I) = FS1
      IF (ABS(G(I))+ ABS(G2(I)).GT. 1.0D-30)  GO TO 80
C                                     FIX A PARAMETER IF  G = G2 = 0.0 .
      IF (ITAUR .GE. 1)  GO TO 85
      ISW(2) = 0
      CALL FIXPAR(I, 1, IFIX)
      WRITE (ISYSWR, 460) IFIX, NAM(IFIX), G(I), G2(I)
      IF (NPAR .EQ. 0)  MDIAG = 1
      GO TO 100
   80 IF (G2(I) .GT. 1.0D-30)  GO TO 90
   85 MDIAG = 1
      WRITE (ISYSWR,510)  I
   90 V(I,I) = G2(I)
  100 CONTINUE
      CALL INTOEX(X)
      IF (MDIAG .EQ. 1)  GO TO 390
      ISW(2) = 1
C                                        . . . .  OFF-DIAGONAL ELEMENTS
      IF (NPAR .EQ. 1)  GO TO 214
      NPARM1 = NPAR - 1
      DO 200 I= 1, NPARM1
      IP1 = I + 1
      DO 180 J= IP1, NPAR
      IF (NFCNMX-NFCN+NPFN .LT. NPAR)  GO TO 210
      XTI = X(I)
      XTJ = X(J)
      X(I) = XTI + DIRIN(I)
      X(J) = XTJ + DIRIN(J)
      CALL INTOEX(X)
      CALL FCN(NPAR, GY, FS1, U, IFLAG)
      NFCN = NFCN + 1
      X(I) = XTI
      X(J) = XTJ
      ELEM = (FS1+AMIN-YY(I)-YY(J)) / (DIRIN(I)*DIRIN(J))
      IF (ELEM**2 .LT. G2(I)*G2(J)) GO TO 170
      ELEM = 0.
      WRITE (ISYSWR, 470)  I,J
  170 V(I,J) = ELEM
      V(J,I) = ELEM
  180 CONTINUE
  200 CONTINUE
      GO TO 214
  210 J = J - 1
      WRITE (ISYSWR, 490)  I,J
  214 CALL INTOEX(X)
      CALL VERMIN(V,MAXINT,MAXINT,NPAR,IFAIL)
      IF (IFAIL .LT. 1)  GO TO 222
      WRITE (ISYSWR,520)
C                                        . . DIAGONAL MATRIX ONLY . . .
  216 WRITE (ISYSWR,540)
      ISW(2) = 1
      DO 220 I= 1, NPAR
      DO 218 J= 1, NPAR
  218 V(I,J) = 0.D0
  220 V(I,I) = 1.0D0/G2(I)
      MDIAG = 0
      GO TO 223
  222 WRITE (ISYSWR, 480)
      ISW(2) = 2
C                                        . . . . . . .  CALCULATE  E D M
  223 DO 225 I= 1, NPAR
      DO 225 J= 1, NPAR
  225 V(I,J) = 2.0D0 * V(I,J)
      SIGMA = 0.D0
      DO 250 I= 1, NPAR
      IF (V(I,I) .GT. 0.D0)  GO TO 228
      WRITE (ISYSWR,510)  I
      MDIAG = 1
  228 R = 0.D0
      DO 240 J= 1, NPAR
      IF (I .EQ. J)  GO TO 230
      IF (V(I,J)**2 .LT. ABS(V(I,I)*V(J,J)))  GO TO 230
      WRITE (ISYSWR, 470)  I,J
      V(I,J) = 0.D0
      V(J,I) = 0.D0
  230 CONTINUE
  240 R = R + V(I,J) * G(J)
  250 SIGMA = SIGMA + 0.5D0 *R *G(I)
      IF (MDIAG .EQ. 1)  GO TO 390
      IF (SIGMA .GT. 0.)  GO TO 400
      WRITE (ISYSWR,530)
      GO TO 216
  390 ISW(2) = 0
  400 RETURN
  460 FORMAT(10H0PARAMETER ,I3,2H, ,A10,  16H, HAS BEEN FIXED ,9X   ,19H
     +FIRST DERIVATIVE IS ,E11.3/1X,40(1H*),8X   ,20HSECOND DERIVATIVE I
     +S ,E11.3/)
  470 FORMAT (  71H COVARIANCE MATRIX NOT POSITIVE-DEFINITE.    FAULTY E
     +LEMENT IN POSITION,2I3)
  480 FORMAT (  35H SECOND DERIVATIVE MATRIX INVERTED )
  490 FORMAT (  76H0CALL LIMIT IN HESSE.  OFF-DIAGONAL ELEMENTS CALCULAT
     +ED  ONLY UP TO POSITION,2I3/)
  500 FORMAT (  37H START SECOND DERIVATIVE CALCULATION )
  510 FORMAT (  17H DIAGONAL ELEMENT ,I5,   20H IS ZERO OR NEGATIVE)
  520 FORMAT (  23H MATRIX INVERSION FAILS)
  530 FORMAT (  29H MATRIX NOT POSITIVE-DEFINITE)
  540 FORMAT (  30H ONLY DIAGONAL MATRIX PRODUCED)
      END
      SUBROUTINE IMPROV
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
CC        ATTEMPTS TO IMPROVE ON A GOOD LOCAL MINIMUM BY FINDING A
CC        BETTER ONE.   THE QUADRATIC PART OF FCN IS REMOVED BY CALFCN
CC        AND THIS TRANSFORMED FUNCTION IS MINIMIZED USING THE SIMPLEX
CC        METHOD FROM SEVERAL RANDOM STARTING POINTS.
CC        REF. -- GOLDSTEIN AND PRICE, MATH.COMP. 25, 569 (1971)
CC
      COMMON
     1/MINERR/ ERP(30)     ,ERN(30)
     2/PARINT/ X(15)       ,XT(15)     ,DIRIN(15)  ,MAXINT     ,NPAR
     3/PAREXT/ U(30)       ,NAM(30)    ,WERR(30)   ,MAXEXT     ,NU
     4/LIMITS/ ALIM(30)    ,BLIM(30)   ,LCODE(30)  ,LCORSP(30) ,LIMSET
     5/VARIAN/ V(15,15)
     7 /FIX/    XS(15),   XTS(15),   WTS(15),   IPFIX(15),   NPFIX
     C/CASC/ JH, JL, Y(16)
     F/DERIVA/ G(30)       ,G2(30)
     G/SIMVEC/ P(15,16)    ,PSTAR(15)  ,PSTST(15)  ,PBAR(15)   ,PRHO(15)
     J/VARIAT/ VT(15,15)
      COMMON
     6/UNIT/  ISYSRD,ISYSWR,ISYSPU
     8/TITLE/ TITLE(13),DATE(2),ISW(7),NBLOCK
     9/CONVER/ EPSI,APSI,VTEST,NSTEPQ,NFCN,NFCNMX
     A/CARD/ CWORD,CWORD2,CWORD3,WORD7(7)
     B/MINIMA/ AMIN,UP,NEWMIN,ITAUR,SIGMA
      DATA ALPHA,BETA,GAMMA / 1.0, 0.5 , 2.0 /
      IF (NPAR .LE. 0)  RETURN
      ITAUR = 1
      EPSI = 0.1D0*UP
      NPFN=NFCN
      NLOOP = WORD7(2)
      IF (NLOOP .LE. 0)  NLOOP = NPAR + 4
      NPARP1=NPAR+1
      WG = 1.0D0/FLOAT(NPAR)
      IFLAG=4
      SIGSAV = SIGMA
      APSI = AMIN
      DO 2 I= 1, NPAR
      XT(I) = X(I)
      G2(I) = SQRT(V(I,I)*UP)
      DO 2 J= 1, NPAR
    2 VT(I,J) = V(I,J)
      CALL VERMIN(VT,MAXINT,MAXINT,NPAR,IFAIL)
      IF (IFAIL .GE. 1)  GO TO 280
      LOOP = 0
    3 DO 4 I= 1, NPAR
      DIRIN(I) = 2.0D0*G2(I)
    4 X(I) = XT(I) + 2.0D0*DIRIN(I)*(RNDM(-1)-0.5D0)
      LOOP = LOOP + 1
      REG = 2.0D0
      WRITE (ISYSWR, 1040) LOOP
    5 AMIN = CALFCN(X)
C                                        . . . . SET UP  RANDOM SIMPLEX
      JL = NPARP1
      JH = NPARP1
      Y(NPARP1) = AMIN
      AMAX = AMIN
      DO 15 I= 1, NPAR
      XI = X(I)
      X(I) = XI -     DIRIN(I) *(RNDM(-1)-0.5D0)
      Y(I) = CALFCN(X)
      IF (Y(I) .GE. AMIN)  GO TO 7
      AMIN = Y(I)
      JL = I
    7 IF (Y(I) .LE. AMAX)  GO TO 8
      AMAX = Y(I)
      JH = I
    8 CONTINUE
      DO 10 J= 1, NPAR
   10 P(J,I) = X(J)
      P(I,NPARP1) = XI
   15 X(I) = XI
      SIGMA = AMIN
      SIG2 = SIGMA
C                                        . . . . . . .  START MAIN LOOP
   50 CONTINUE
      IF (AMIN .LT. 0.D0)  GO TO 95
      IF (ISW(2) .LT. 2)  GO TO 280
      EP = 0.1D0*AMIN
      IF (SIG2 .LT. EP   .AND. SIGMA.LT.EP  )     GO TO 100
      SIG2 = SIGMA
      IF ((NFCN-NPFN) .GT. NFCNMX)  GO TO 300
C         CALCULATE NEW POINT * BY REFLECTION
      DO 60 I= 1, NPAR
      PB = 0.D0
      DO 59 J= 1, NPARP1
   59 PB = PB + WG * P(I,J)
      PBAR(I) = PB - WG * P(I,JH)
   60 PSTAR(I)=(1.D0+ALPHA)*PBAR(I)-ALPHA*P(I,JH)
      YSTAR = CALFCN(PSTAR)
      IF(YSTAR.GE.AMIN) GO TO 70
C         POINT * BETTER THAN JL, CALCULATE NEW POINT **
      DO 61 I=1,NPAR
   61 PSTST(I)=GAMMA*PSTAR(I)+(1.D0-GAMMA)*PBAR(I)
      YSTST = CALFCN(PSTST)
   66 IF (YSTST .LT. Y(JL))  GO TO 67
      CALL RAZZIA(YSTAR,PSTAR)
      GO TO 50
   67 CALL RAZZIA(YSTST,PSTST)
      GO TO 50
C         POINT * IS NOT AS GOOD AS JL
   70 IF (YSTAR .GE. Y(JH))  GO TO 73
      JHOLD = JH
      CALL RAZZIA(YSTAR,PSTAR)
      IF (JHOLD .NE. JH)  GO TO 50
C         CALCULATE NEW POINT **
   73 DO 74 I=1,NPAR
   74 PSTST(I)=BETA*P(I,JH)+(1.D0-BETA)*PBAR(I)
      YSTST = CALFCN(PSTST)
      IF(YSTST.GT.Y(JH)) GO TO 5
C     POINT ** IS BETTER THAN JH
      IF (YSTST .LT. AMIN)  GO TO 67
      CALL RAZZIA(YSTST,PSTST)
      GO TO 50
C                                        . . . . . .  END MAIN LOOP
   95 WRITE (ISYSWR,1000)
      REG = 0.1D0
C                                        . . . . . ASK IF POINT IS NEW
  100 CALL INTOEX(X)
      CALL FCN(NPAR,G,AMIN,U,4)
      NFCN = NFCN + 1
      DO 120 I= 1, NPAR
      DIRIN(I) = REG*G2(I)
      IF (ABS(X(I)-XT(I)) .GT. DIRIN(I)) GO TO 150
  120 CONTINUE
      GO TO 230
  150 NFCNMX = NFCNMX + NPFN - NFCN
      NPFN = NFCN
      CALL SIMPLX
      IF (AMIN .GE. APSI)  GO TO 325
      DO 220 I= 1, NPAR
      DIRIN(I) = 0.1 *G2(I)
      IF (ABS(X(I)-XT(I)) .GT. DIRIN(I)) GO TO 250
  220 CONTINUE
  230 IF (AMIN .LT. APSI)  GO TO 350
      GO TO 325
C                                        . . . . . . TRULY NEW MINIMUM
  250 NEWMIN = 1
      ISW(2) = 0
      ITAUR = 0
      NFCNMX = NFCNMX + NPFN - NFCN
      WRITE (ISYSWR,1030)
      RETURN
C                                        . . . RETURN TO PREVIOUS REGION
  280 WRITE (ISYSWR,1020)
      ISW(2) = 0
      GO TO 325
  300 ISW(1) = 1
  325 DO 330 I= 1, NPAR
      DIRIN(I) = 0.01D0*G2(I)
  330 X(I) = XT(I)
      AMIN = APSI
      SIGMA = SIGSAV
  350 CALL INTOEX(X)
      WRITE (ISYSWR,1010)
      IF (ISW(2) .LT. 2)  GO TO 380
      IF (LOOP .LT. NLOOP .AND. ISW(1) .LT. 1)  GO TO 3
      ISW(2) = 3
  380 CALL MPRINT (1,AMIN)
      RETURN
 1000 FORMAT (  54H AN IMPROVEMENT ON THE PREVIOUS MINIMUM HAS BEEN FOUN
     1D)
 1010 FORMAT (  51H IMPROVE HAS RETURNED TO REGION OF ORIGINAL MINIMUM)
 1020 FORMAT (  44H0COVARIANCE MATRIX WAS NOT POSITIVE-DEFINITE)
 1030 FORMAT (  38H0IMPROVE HAS FOUND A TRULY NEW MINIMUM/1H ,37(1H*)/)
 1040 FORMAT (  18H0START ATTEMPT NO.,I2,  20H TO FIND NEW MINIMUM)
      END
      SUBROUTINE INTOEX(PINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
CC        TRANSFORMS FROM INTERNAL COORDINATES (PINT) TO EXTERNAL
CC        PARAMETERS (U).   THE MINIMIZING ROUTINES WHICH WORK IN
CC        INTERNAL COORDINATES CALL THIS ROUTINE BEFORE CALLING FCN.
      COMMON
     1/MINERR/ ERP(30)     ,ERN(30)
     2/PARINT/ X(15)       ,XT(15)     ,DIRIN(15)  ,MAXINT     ,NPAR
     3/PAREXT/ U(30)       ,NAM(30)    ,WERR(30)   ,MAXEXT     ,NU
     4/LIMITS/ ALIM(30)    ,BLIM(30)   ,LCODE(30)  ,LCORSP(30) ,LIMSET
     5/VARIAN/ V(15,15)
     7 /FIX/    XS(15),   XTS(15),   WTS(15),   IPFIX(15),   NPFIX
     C/CASC/ JH, JL, Y(16)
     F/DERIVA/ G(30)       ,G2(30)
     G/SIMVEC/ P(15,16)    ,PSTAR(15)  ,PSTST(15)  ,PBAR(15)   ,PRHO(15)
     J/VARIAT/ VT(15,15)
      COMMON
     6/UNIT/  ISYSRD,ISYSWR,ISYSPU
     8/TITLE/ TITLE(13),DATE(2),ISW(7),NBLOCK
     9/CONVER/ EPSI,APSI,VTEST,NSTEPQ,NFCN,NFCNMX
     A/CARD/ CWORD,CWORD2,CWORD3,WORD7(7)
     B/MINIMA/ AMIN,UP,NEWMIN,ITAUR,SIGMA
      DIMENSION PINT(2)
      DO 100 I= 1, NU
      J = LCORSP(I)
      IF ( J )  100,100,50
   50 CONTINUE
      IF (LCODE(I) .EQ. 1)  GO TO 80
      AL = ALIM(I)
      U(I) = AL + 0.5D0 *(SIN(PINT(J)) +1.0D0) * (BLIM(I) -AL)
      GO TO 100
   80 U(I) = PINT(J)
  100 CONTINUE
      RETURN
      END
      SUBROUTINE MATOUT(TRACE,KODE)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
CC        PRINTS THE COVARIANCE MATRIX V.     CALCULATES AND PRINTS THE
CC        INDIVIDUAL CORRELATION COEFFICIENTS AND GLOBAL CORRELATIONS.
CC
      COMMON
     1/MINERR/ ERP(30)     ,ERN(30)
     2/PARINT/ X(15)       ,XT(15)     ,DIRIN(15)  ,MAXINT     ,NPAR
     3/PAREXT/ U(30)       ,NAM(30)    ,WERR(30)   ,MAXEXT     ,NU
     4/LIMITS/ ALIM(30)    ,BLIM(30)   ,LCODE(30)  ,LCORSP(30) ,LIMSET
     5/VARIAN/ V(15,15)
     7 /FIX/    XS(15),   XTS(15),   WTS(15),   IPFIX(15),   NPFIX
     C/CASC/ JH, JL, Y(16)
     F/DERIVA/ G(30)       ,G2(30)
     G/SIMVEC/ P(15,16)    ,PSTAR(15)  ,PSTST(15)  ,PBAR(15)   ,PRHO(15)
     J/VARIAT/ VT(15,15)
      COMMON
     6/UNIT/  ISYSRD,ISYSWR,ISYSPU
     8/TITLE/ TITLE(13),DATE(2),ISW(7),NBLOCK
     9/CONVER/ EPSI,APSI,VTEST,NSTEPQ,NFCN,NFCNMX
     A/CARD/ CWORD,CWORD2,CWORD3,WORD7(7)
     B/MINIMA/ AMIN,UP,NEWMIN,ITAUR,SIGMA
      DIMENSION VLINE(15)
      IF (ISW(2) .LT. 2)  RETURN
      WRITE (ISYSWR,600)
      IF (TRACE .NE. 0.0D0)  WRITE (ISYSWR,610)  TRACE
      IF (NPAR .EQ. 0)  GO TO 250
      ISWTR = ISW(5) - ITAUR
      IF (ISWTR .LT. 2)  GO TO 120
C                                       . . INTERNAL COVARIANCE MATRIX
      DO 100 I= 1, NPAR
  100 WRITE (ISYSWR,620)  (V(I,J), J=1,I)
  120 CONTINUE
C                                       . . . . . CORRELATION COEFFS. .
      IF (KODE .LT. 1)  GO TO 500
      IF (NPAR .LE. 1)  GO TO 500
      WRITE (ISYSWR, 650)
      NPARM = MIN0(NPAR-1, 18)
      WRITE (ISYSWR,690)  (ID,ID=1,NPARM)
      DO 200 I= 2, NPAR
      IM = I-1
      DO 170 J= 1, IM
  170 VLINE(J) = V(I,J)/SQRT(ABS(V(I,I)*V(J,J)))
  200 WRITE (ISYSWR,660)  I,(VLINE(IZ),IZ=1,IM)
  250 CONTINUE
C                                       GLOBAL CORRELATION COEFFS . . .
      DO 300 I= 1, NPAR
      DO 300 J= 1, NPAR
  300 P(I,J) = V(I,J)
      CALL VERMIN(P,MAXINT,MAXINT,NPAR,IERR)
      IF(IERR .GT. 0)  RETURN
      WRITE (ISYSWR,670)
      DO 400 I= 1, NU
      L = LCORSP(I)
      IF (L .EQ. 0)  GO TO 400
      GCC = 1.0D0 - 1.0D0/(V(L,L)*P(L,L))
      WRITE(ISYSWR,680)  I, NAM(I), GCC
  400 CONTINUE
  500 RETURN
  600 FORMAT(/11X  ,26HINTERNAL COVARIANCE MATRIX)
  610 FORMAT (1H+,43X  ,28H LAST FRACTIONAL CHANGE WAS  ,F10.6)
  620 FORMAT (1H ,9X,11E10.3)
  650 FORMAT (11X  ,24HCORRELATION COEFFICIENTS)
  660 FORMAT (8X,I3,18F6.3/(20F6.3))
  670 FORMAT (64X   ,18HGLOBAL CORRELATION/ 54X   ,25HPARAMETER     COEF
     +FICIENT)
  680 FORMAT (47X,I5,2X,A10,F13.5)
  690 FORMAT (8X,4HINT.,I4,17I6)
      END
      SUBROUTINE MIDATA
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
CC        READS THE DATA CARDS (TITLE CARD AND PARAMETER CARDS)
CC        AND SETS UP THE STARTING PARAMETER LISTS.
CC        CONTROL THEN PASSES TO COMAND FOR READING THE COMMAND CARDS.
CC
      CHARACTER*4 LETTER,ANAMK,NAM
      COMMON
     1/MINERR/ ERP(30)     ,ERN(30)
     2/PARINT/ X(15)       ,XT(15)     ,DIRIN(15)  ,MAXINT     ,NPAR
     3/PAREXT/ U(30)       ,NAM(30)    ,WERR(30)   ,MAXEXT     ,NU
     4/LIMITS/ ALIM(30)    ,BLIM(30)   ,LCODE(30)  ,LCORSP(30) ,LIMSET
     5/VARIAN/ V(15,15)
     7 /FIX/    XS(15),   XTS(15),   WTS(15),   IPFIX(15),   NPFIX
     C/CASC/ JH, JL, Y(16)
     F/DERIVA/ G(30)       ,G2(30)
     G/SIMVEC/ P(15,16)    ,PSTAR(15)  ,PSTST(15)  ,PBAR(15)   ,PRHO(15)
     J/VARIAT/ VT(15,15)
      COMMON
     6/UNIT/  ISYSRD,ISYSWR,ISYSPU
     8/TITLE/ TITLE(13),DATE(2),ISW(7),NBLOCK
     9/CONVER/ EPSI,APSI,VTEST,NSTEPQ,NFCN,NFCNMX
     A/CARD/ CWORD,CWORD2,CWORD3,WORD7(7)
     B/MINIMA/ AMIN,UP,NEWMIN,ITAUR,SIGMA
      LOGICAL INTRAC, DUMMY
      DIMENSION XTITLE(13)
      DATA XTITLE /4H    , 4HINTE, 4HRACT, 4HIVE , 4HMINU, 4HITS ,
     1     4H    , 4H    , 4H    , 4H    , 4H    , 4H    , 4H    /
      DATA LYES, MNINIT / 1HY,  0/
C                                        . INITIALIZE NEW DATA BLOCK . .
      IF (MNINIT .EQ. 0)  NBLOCK=0
      MNINIT = 1
      NBLOCK = NBLOCK + 1
      VERSN = 2.77D0
      WRITE (ISYSWR,1004)  MAXINT,MAXEXT,VERSN,NBLOCK
      WRITE (ISYSWR,1005)
      DO 50 I= 1, 7
   50 ISW(I) = 0
      DATE(1)=XTITLE(1)
      DATE(2)=XTITLE(1)
      DO 52 I= 1, 13
   52 TITLE(I) = XTITLE(I)
C         ISW(6)=0 FOR BATCH JOBS,  =1 FOR INTERACTIVE JOBS
      IF (INTRAC(DUMMY))  ISW(6) = 1
      SIGMA = 0.D0
      IF (ISW(6) .EQ. 1)  GO TO 55
      READ (ISYSRD,110)  TITLE,DATE
  110 FORMAT (15A4)
   55 CONTINUE
      CALL TIMEX(TIME)
      WRITE (ISYSWR,1110)  TITLE,DATE,TIME
      WRITE (ISYSWR,1005)
      NPFIX = 0
      NINT = 0
      NU = 0
      NPAR = 0
      IFATAL = 0
      WRITE (ISYSWR,1005)
      DO 100 I= 1, MAXEXT
      U(I) = 0.0D0
      NAM(I) = '0'
      ERP(I) = 0.0D0
      ERN(I) = 0.0D0
      LCODE(I) = 0
      LCORSP (I) = 0
  100 CONTINUE
      UP = 1.0D0
      ISW(5) = 1
      IUNIT = ISYSRD
      IF (ISW(6) .NE. 1)  GO TO 105
      WRITE (ISYSWR,1015)
      READ (ISYSRD,1016) LETTER
      IF (LETTER .NE. LYES)  GO TO 105
      IUNIT = ISYSPU
      WRITE (ISYSWR,1017)
      READ  (ISYSRD,1016)  LETTER
      IF (LETTER .EQ. LYES)  REWIND IUNIT
      READ(IUNIT,1016) LETTER
  105 CONTINUE
C                                        . . . READ PARAMETER CARDS . .
      ENTRY MIDAT2
      ISW(2) = 0
      DO 200 I= 1, 200
      IF (ISW(6).EQ. 1 .AND. IUNIT.EQ.ISYSRD)  WRITE (ISYSWR,1014)
      READ(IUNIT,10001) ANAMK
10001 FORMAT(1X,A4)
      READ (IUNIT,1001)  XK,UK,WK,A,B
      K = XK + 0.1D0
      NU = MAX0(NU,K)
      IF (K .LE. 0)  GO TO 250
      IF (K .LE. MAXEXT)  GO TO 115
      IFATAL = IFATAL + 1
      WRITE (ISYSWR,1009)  K,MAXEXT
      WRITE (ISYSWR,1002)  K,ANAMK,UK,WK,A,B
      GO TO 200
  115 CONTINUE
      IF(NAM(K).EQ.'0') GO TO 120
C         PREVIOUSLY DEFINED PARAMETER IS BEING REDEFINED
      WRITE(ISYSWR,1007)
      IF(WERR(K).GT..0) NINT=NINT-1
  120 CONTINUE
      NAM(K) = ANAMK
      U(K) = UK
      WERR(K) = WK
      IF (WK .GT. 0.0)  GO TO 122
C                                        . . . FIXED PARAMETER . . . . .
      WRITE (ISYSWR, 1002)  K,ANAMK,UK
      LCODE(K) = 0
      GO TO 160
C                                        . . . VARIABLE PARAMETER . . .
  122 WRITE (ISYSWR, 1002)  K,ANAMK,UK,WK,A,B
      NINT = NINT + 1
      IF  (A)  140,130,140
  130 IF  (B)  140,135,140
  135 LCODE(K) = 1
      GO TO 160
  140 IF (B-A)  145,142,150
  142 IFATAL = IFATAL + 1
      WRITE (ISYSWR,1010)
      GO TO 150
  145 SAV = B
      B = A
      A = SAV
      WRITE (ISYSWR,1003)
  150 ALIM(K) = A
      BLIM(K) = B
      LCODE(K) = 4
      IF ((B-U(K))*(U(K)-A))  153,155,160
  153 IFATAL = IFATAL + 1
      WRITE (ISYSWR,1011)
      GO TO 160
  155 WRITE (ISYSWR,1006)
  160 CONTINUE
  200 CONTINUE
      IFATAL = IFATAL + 1
      WRITE (ISYSWR,1012)
C                                       . . . END PARAMETER CARDS
C                                       . .   . STOP IF FATAL ERROR
  250 WRITE (ISYSWR,1005)
      IF (NINT .LE. MAXINT)  GO TO 253
      WRITE (ISYSWR,1008)  NINT,MAXINT
      IFATAL = IFATAL + 1
  253 IF (IFATAL .LE. 0)  GO TO 280
      WRITE (ISYSWR,1013)  IFATAL
      STOP
C                                       CALCULATE STEP SIZES DIRIN
  280 NPAR = 0
      DO 300 K= 1, NU
      IF (LCODE(K) .LE. 0)  GO TO 300
      NPAR = NPAR + 1
      LCORSP(K) = NPAR
      SAV = U(K)
      X(NPAR) = PINTF(SAV,K)
      XT(NPAR) = X(NPAR)
      SAV2 = SAV + WERR(K)
      VPLU = PINTF(SAV2,K) - X(NPAR)
      SAV2 = SAV - WERR(K)
      VMINU = PINTF(SAV2,K) - X(NPAR)
      DIRIN(NPAR) = 0.5D0 * (ABS(VPLU) +ABS(VMINU))
  300 CONTINUE
      IUNIT = ISYSRD
      RETURN
C...     THE FORMAT BELOW IS MACHINE-DEPENDENT. (A10) , (A6,4X) , ETC.
 1001 FORMAT (F10.0,4F10.7)
 1002 FORMAT (I10,2X,A10,2X,2G12.6,2X,2G12.6)
 1003 FORMAT (  53H WARNING           - ABOVE LIMITS HAVE BEEN REVERSED.
     1)
 1004 FORMAT (1H1/42X,21(1H*)/42X,21H*   D506   MINUIT   */42X,
     112H* DIMENSIONS, I3, 1H/, I3, 2H */   42X,
     111H*   VERSION ,F6.2,4H   */42X,16H* DATA BLOCK NO. ,I3,2H *)
 1005 FORMAT (80(1H*))
 1006 FORMAT (  49H WARNING           - ABOVE PARAMETER IS AT LIMIT )
 1007 FORMAT ( 106H WARNING  *******  - PARAMETER REQUESTED ON FOLLOWING
     1 CARD HAS ALREADY APPEARED.  PREVIOUS VALUES IGNORED.)
 1008 FORMAT (  46H0   TOO MANY VARIABLE PARAMETERS.  YOU REQUEST,I5/  4
     +9H   THIS VERSION OF MINUIT IS ONLY DIMENSIONED FOR,I4//)
 1009 FORMAT (  30H0FATAL ERROR. PARAMETER NUMBER ,I11,  29H GREATER THA
     +N ALLOWED MAXIMUM ,I4)
 1010 FORMAT (  47H FATAL ERROR. UPPER AND LOWER LIMITS ARE EQUAL.)
 1011 FORMAT (  38H FATAL ERROR. PARAMETER OUTSIDE LIMITS/)
 1012 FORMAT (  43H0FATAL ERROR. MORE THAN 200 PARAMETER CARDS /)
 1013 FORMAT (/I5,  41H FATAL ERRORS ON PARAMETER CARDS.  ABORT.//)
 1014 FORMAT (20H NEXT PARAMETER...    / 8X,
     160H ....NO..!!..NAME..!!..VALUE.!!..ERROR.!!.LO LIM.!!.UP LIM.! /)
 1015 FORMAT (40H0ARE PARAMETER CARDS ON FILE 'PUNCH' ?       )
 1016 FORMAT (A1)
 1017 FORMAT (30H SHALL I REWIND FILE 'PUNCH' ?  )
 1110 FORMAT (5X,15A4,5X,4HTIME,F7.3)
      END
      SUBROUTINE  MIGRAD
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
CC        PERFORMS A LOCAL FUNCTION MINIMIZATION USING BASICALLY THE
CC        METHOD OF DAVIDON-FLETCHER-POWELL AS MODIFIED BY FLETCHER
CC        REF. -- FLETCHER, COMP.J. 13,317 (1970)   "SWITCHING METHOD"
CC
      COMMON
     1/MINERR/ ERP(30)     ,ERN(30)
     2/PARINT/ X(15)       ,XT(15)     ,DIRIN(15)  ,MAXINT     ,NPAR
     3/PAREXT/ U(30)       ,NAM(30)    ,WERR(30)   ,MAXEXT     ,NU
     4/LIMITS/ ALIM(30)    ,BLIM(30)   ,LCODE(30)  ,LCORSP(30) ,LIMSET
     5/VARIAN/ V(15,15)
     7 /FIX/    XS(15),   XTS(15),   WTS(15),   IPFIX(15),   NPFIX
     C/CASC/ JH, JL, Y(16)
     F/DERIVA/ G(30)       ,G2(30)
     G/SIMVEC/ P(15,16)    ,PSTAR(15)  ,PSTST(15)  ,PBAR(15)   ,PRHO(15)
     J/VARIAT/ VT(15,15)
      COMMON
     6/UNIT/  ISYSRD,ISYSWR,ISYSPU
     8/TITLE/ TITLE(13),DATE(2),ISW(7),NBLOCK
     9/CONVER/ EPSI,APSI,VTEST,NSTEPQ,NFCN,NFCNMX
     A/CARD/ CWORD,CWORD2,CWORD3,WORD7(7)
     B/MINIMA/ AMIN,UP,NEWMIN,ITAUR,SIGMA
      DIMENSION GS(30) , R(15),XXS(15), FLNU(15), VG(15), VII(15)
      DATA SLAMIN,SLAMAX,TLAMIN,TLAMAX/0.2, 3.0, 0.05, 6.0/
      IF (NPAR .LE. 0)  RETURN
      ISWTR = ISW(5) - ITAUR
      NPFN = NFCN
      PARN=NPAR
      RHO2 = 10.D0*APSI
      ROSTOP = 1.0D-5 * APSI
      TRACE=1.D0
      IFLAG=4
      IF (ISW(3) .EQ. 1)  IFLAG = 2
      FS = AMIN
      IF (ITAUR .LT. 1)  WRITE (ISYSWR,470)  ROSTOP, APSI, VTEST
      GO TO 2
    1 WRITE (ISYSWR,520)
C                                        . . . . STEP SIZES DIRIN . . .
    2 NPARD = NPAR
      DO  3 I= 1, NPAR
      D = 0.02D0* ABS(DIRIN(I))
      IF (ISW(2) .GE. 1)  D = 0.02D0* SQRT(ABS(V(I,I))*UP)
      IF (D .LT.  1.0D-8 *ABS(X(I)))  D = 1.0D-8 * X(I)
    3 DIRIN(I) = D
C                                        . . . . . . STARTING GRADIENT
      NTRY = 0
    4 NEGG2 = 0
      DO 10  ID= 1, NPARD
      I = ID + NPAR - NPARD
      D = DIRIN(I)
      XTF = X(I)
      X(I) = XTF + D
      CALL INTOEX(X)
      CALL FCN(NPAR,G,FS1,U,4)
      NFCN = NFCN + 1
      X(I) = XTF - D
      CALL INTOEX(X)
      CALL FCN(NPAR,G,FS2,U,4)
      NFCN = NFCN + 1
      X(I) = XTF
      GS(I) = (FS1-FS2)/(2.0D0 * D)
      G2(I) = (FS1 + FS2 - 2.0D0*AMIN) / D**2
      IF (G2(I) .GT. 1.0D-30)  GO TO 10
C                                        . . . SEARCH IF G2 .LE. 0. . .
      WRITE (ISYSWR,520)
      NEGG2 = NEGG2 + 1
      NTRY = NTRY + 1
      IF (NTRY .GT. 4)  GO TO 230
      D = 50.D0*ABS(DIRIN(I))
      XBEG = XTF
      IF (GS(I) .LT. 0.)  DIRIN(I) = -DIRIN(I)
      KG = 0
      NF = 0
      NS = 0
    5 X(I) = XTF + D
      CALL INTOEX(X)
      CALL FCN(NPAR,G,F,U,4)
      NFCN = NFCN + 1
      IF (F .LE. AMIN)  GO TO 6
C         FAILURE
      IF (KG .EQ. 1)  GO TO 8
      KG = -1
      NF = NF + 1
      D = -0.4D0*D
      IF (NF .LT. 10)  GO TO 5
      D = 1000.D0*D
      GO TO 7
C         SUCCESS
    6 XTF = X(I)
      D = 3.0D0*D
      AMIN = F
      KG = 1
      NS = NS + 1
      IF (NS .LT. 10)  GO TO 5
      IF (AMIN .LT. FS)  GO TO 8
      D = 0.001D0*D
    7 XTF = XBEG
      G2(I) = 1.0D0
      NEGG2 = NEGG2 - 1
    8 X(I) = XTF
      DIRIN(I) = 0.1D0*D
      FS = AMIN
   10 CONTINUE
      IF (NEGG2 .GE. 1)  GO TO 4
      NTRY = 0
      MATGD = 1
C                                        . . . . . . DIAGONAL MATRIX
      IF (ISW(2) .GT. 1)  GO TO 15
   11 NTRY = 1
      MATGD = 0
      DO 13 I= 1, NPAR
      DO 12 J= 1, NPAR
   12 V(I,J) = 0.D0
   13 V(I,I) = 2.0D0/G2(I)
C                                        . . . GET SIGMA AND SET UP LOOP
   15 SIGMA = 0.D0
      DO 18 I= 1, NPAR
      IF (V(I,I) .LE. 0.D0)  GO TO 11
      RI = 0.D0
      DO 17 J= 1, NPAR
      XXS(I) = X(I)
   17 RI= RI+ V(I,J) * GS(J)
   18 SIGMA = SIGMA + GS(I) *RI *0.5D0
      IF (SIGMA .GE. 0.)  GO TO 20
      WRITE (ISYSWR,520)
      IF (NTRY.EQ.0)  GO TO 11
      ISW(2) = 0
      GO TO 230
   20 ISW(2) = 1
      ITER = 0
      CALL INTOEX(X)
      IF (ISWTR .GE. 1)  CALL MPRINT(0,AMIN)
      IF (ISWTR .GE. 2)  CALL matout(0.0D0, 1)
C                                        . . . . .  START MAIN LOOP
   24 CONTINUE
      GDEL = 0.D0
      DO 30  I=1,NPAR
      RI = 0.D0
      DO 25 J=1,NPAR
   25 RI = RI + V(I,J) *GS(J)
      DIRIN(I) = -0.5D0*RI
      GDEL = GDEL + DIRIN(I)*GS(I)
C                                        .LINEAR SEARCH ALONG -VG  . . .
   30 X(I) =XXS(I) + DIRIN(I)
      CALL INTOEX(X)
      CALL FCN (NPAR, G, F, U, 4)
      NFCN=NFCN+1
C                                        . QUADR INTERP USING SLOPE GDEL
      DENOM = 2.0D0*(F-AMIN-GDEL)
      IF (DENOM .LE. 0.)  GO TO 35
      SLAM = -GDEL/DENOM
      IF (SLAM .GT. SLAMAX)  GO TO 35
      IF (SLAM .LT. SLAMIN)  SLAM=SLAMIN
      GO TO 40
   35 SLAM = SLAMAX
   40 IF (ABS(SLAM-1.0D0) .LT. 0.1D0)  GO TO 70
      DO 45 I= 1, NPAR
   45 X(I) =XXS(I) + SLAM*DIRIN(I)
      CALL INTOEX(X)
      CALL FCN(NPAR,G,F2,U,4)
      NFCN = NFCN + 1
C                                        . QUADR INTERP USING 3 POINTS
      AA = FS/SLAM
      BB = F/(1.0D0-SLAM)
      CC = F2/ (SLAM*(SLAM-1.0D0))
      DENOM = 2.0D0*(AA+BB+CC)
      IF (DENOM .LE. 0.D0)  GO TO 48
      TLAM = (AA*(SLAM+1.0D0) + BB*SLAM + CC)/DENOM
      IF (TLAM .GT. TLAMAX)  GO TO 48
      IF (TLAM .LT. TLAMIN)  TLAM=TLAMIN
      GO TO 50
   48 TLAM = TLAMAX
   50 CONTINUE
      DO 51 I= 1, NPAR
   51 X(I) = XXS(I)+TLAM*DIRIN(I)
      CALL INTOEX(X)
      CALL FCN(NPAR,G,F3,U,4)
      NFCN = NFCN + 1
      IF (F.GE.AMIN .AND. F2.GE.AMIN .AND. F3.GE.AMIN) GO TO 200
      IF (F .LT. F2 .AND. F .LT. F3)  GO TO 61
      IF (F2 .LT. F3)  GO TO 58
   55 F = F3
      SLAM = TLAM
      GO TO 65
   58 F = F2
      GO TO 65
   61 SLAM = 1.0D0
   65 DO 67 I= 1, NPAR
      DIRIN(I) = DIRIN(I)*SLAM
   67 X(I) = XXS(I) + DIRIN(I)
   70 AMIN = F
      ISW(2) = 2
      IF (SIGMA+FS-AMIN .LT. ROSTOP)  GO TO 170
      IF (SIGMA+RHO2+FS-AMIN .GT. APSI)  GO TO 75
      IF (TRACE .LT. VTEST)  GO TO 170
   75 CONTINUE
      IF (NFCN-NPFN .GE. NFCNMX)  GO TO 190
      ITER = ITER + 1
      IF (ISWTR.GE. 3 .OR.(ISWTR.EQ. 2 .AND. MOD(ITER,10) .EQ.1))
     *      CALL MPRINT(0,AMIN)
C                                        . . . GET GRADIENT AND SIGMA .
      IF (ISW(3) .NE. 1)  GO TO 80
      CALL INTOEX(X)
      CALL FCN(NPAR,G,AMIN,U,IFLAG)
      NFCN = NFCN + 1
   80 CALL DERIVE(G,G2)
      RHO2 = SIGMA
      SIGMA = 0.D0
      GVG = 0.D0
      DELGAM = 0.D0
      DO 100 I= 1, NPAR
      RI = 0.D0
      VGI = 0.D0
      DO 90 J= 1, NPAR
      VGI = VGI + V(I,J)*(G(J)-GS(J))
   90 RI = RI + V(I,J) *G (J)
      R(I) = RI * 0.5D0
      VG(I) = VGI*0.5D0
      GAMI = G(I) - GS(I)
      GVG = GVG + GAMI*VG(I)
      DELGAM = DELGAM + DIRIN(I)*GAMI
  100 SIGMA = SIGMA + G(I)*R(I)
      IF (SIGMA .LT. 0.D0)  GO TO 1
      IF (GVG .LE. 0.)  GO TO 105
      IF (DELGAM .LE. 0.D0)  GO TO 105
      GO TO 107
  105 IF (SIGMA .LT. 0.1D0*ROSTOP)  GO TO 170
      GO TO 1
  107 CONTINUE
C                                        .  UPDATE COVARIANCE MATRIX
      TRACE=0.D0
      DO 120 I= 1, NPAR
      VII(I) = V(I,I)
      DO  120  J=1,NPAR
      D = DIRIN(I)*DIRIN(J)/DELGAM - VG(I)*VG(J)/GVG
  120 V(I,J) = V(I,J) + 2.0D0*D
      IF (DELGAM .LE. GVG)  GO TO 135
      DO 125 I= 1, NPAR
  125 FLNU(I) = DIRIN(I)/DELGAM - VG(I)/GVG
      DO 130 I= 1, NPAR
      DO 130 J= 1, NPAR
  130 V(I,J) = V(I,J) + 2.0D0*GVG*FLNU(I)*FLNU(J)
  135 CONTINUE
      DO 140 I= 1, NPAR
      XXS(I) = X(I)
      GS(I) = G(I)
  140 TRACE = TRACE + ((V(I,I)-VII(I))/(V(I,I)+VII(I)))**2
      TRACE = SQRT(TRACE/PARN)
      IF (ISWTR .GE. 4)  CALL MATOUT(TRACE, 0)
      FS = F
      GO TO 24
C                                        . . . . .  END MAIN LOOP
  170 WRITE(ISYSWR,500)
      ISW(2) = 3
      IF(ISWTR .GE. 0)  CALL MPRINT(1-ITAUR,AMIN)
      ISWTR = ISWTR - 3*ITAUR
      IF (ISWTR .GT. 0)  CALL MATOUT(TRACE,1)
      IF (ITAUR .GT. 0)  GO TO 435
      IF (MATGD .GT. 0)  GO TO 435
      NPARGD = NPAR*(NPAR+5)/2
      IF (NFCN-NPFN .GE. NPARGD)  GO TO 435
      WRITE (ISYSWR,180)
  180 FORMAT (  55H COVARIANCE MATRIX INACCURATE.  MINUIT WILL RECALCULA
     1TE)
      CALL HESSE
      CALL MPRINT(1,AMIN)
      CALL matout(0.0D0, 1)
      IF (ISW(2) .GE. 2)  ISW(2) = 3
      GO TO 435
  190 ISW(1) = 1
      GO TO 230
  200 WRITE (ISYSWR,650)
      DO 210 I= 1, NPAR
  210 X(I) = XXS(I)
      ISW(2) = 1
      IF (SIGMA .LT. ROSTOP)  GO TO 170
      IF (MATGD .GT. 0)  GO TO 2
  230 WRITE (ISYSWR,510)
      CALL  INTOEX(X)
      CALL MPRINT(1-ITAUR, AMIN)
      ISWTR = ISW(5) - ITAUR*3
      IF (ISWTR .LT. 1)  GO TO 435
      IF (ISW(2) .LE. 1)  GO TO 435
      CALL MATOUT(TRACE,1)
  435 RETURN
  470 FORMAT (   37H START MIGRAD MINIMIZATION.           ,8X  ,66HCONVE
     +RGENCE CRITERIA  --  ESTIMATED DISTANCE TO MINIMUM (EDM) .LT.,E9.2
     +/45X  ,11HOR EDM .LT.,E9.2,  46H AND FRACTIONAL CHANGE IN VARIANCE
     + MATRIX .LT.,E9.2)
  500 FORMAT (  34H MIGRAD MINIMIZATION HAS CONVERGED )
  510 FORMAT (  39H MIGRAD TERMINATED WITHOUT CONVERGENCE )
  520 FORMAT (11X  ,43HCOVARIANCE MATRIX IS NOT POSITIVE-DEFINITE.)
  650 FORMAT (  34H MIGRAD FAILS TO FIND IMPROVEMENT )
      END
      SUBROUTINE MINNEW
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
CC        THIS IS THE MAIN PROGRAM, DISGUISED AS A SUBROUTINE FOR
CC        REASONS OF COMPATIBILITY BETWEEN SYSTEMS.    IT INITIALIZES
CC        SOME CONSTANTS IN COMMON (INCLUDING THE LOGICAL I/O UNIT NOS.)
CC        THEN VERIFIES THAT FCN GIVES THE SAME VALUE WHEN CALLED
CC        TWICE WITH THE SAME ARGUMENTS, AND PASSES CONTROL TO COMAND.
CC
      COMMON
     1/MINERR/ ERP(30)     ,ERN(30)
     2/PARINT/ X(15)       ,XT(15)     ,DIRIN(15)  ,MAXINT     ,NPAR
     3/PAREXT/ U(30)       ,NAM(30)    ,WERR(30)   ,MAXEXT     ,NU
     4/LIMITS/ ALIM(30)    ,BLIM(30)   ,LCODE(30)  ,LCORSP(30) ,LIMSET
     5/VARIAN/ V(15,15)
     7 /FIX/    XS(15),   XTS(15),   WTS(15),   IPFIX(15),   NPFIX
     C/CASC/ JH, JL, Y(16)
     F/DERIVA/ G(30)       ,G2(30)
     G/SIMVEC/ P(15,16)    ,PSTAR(15)  ,PSTST(15)  ,PBAR(15)   ,PRHO(15)
     J/VARIAT/ VT(15,15)
      COMMON
     6/UNIT/  ISYSRD,ISYSWR,ISYSPU
     8/TITLE/ TITLE(13),DATE(2),ISW(7),NBLOCK
     9/CONVER/ EPSI,APSI,VTEST,NSTEPQ,NFCN,NFCNMX
     A/CARD/ CWORD,CWORD2,CWORD3,WORD7(7)
     B/MINIMA/ AMIN,UP,NEWMIN,ITAUR,SIGMA
      DATA RET1,RET2,RET3/ 4H RET, 4HRETU, 4HRETR /
C         UNIT NUMBERS FOR CARD READER, PRINTER, PUNCH
C
C
      MAXINT=15
      MAXEXT=30
  110 CONTINUE
      NFCN = 1
      CALL MIDATA
      CALL INTOEX(X)
      WRITE (ISYSWR,120)
  120 FORMAT (/20H0FIRST ENTRY TO FCN   )
      CALL FCN(NPAR,G,AMIN,U,1)
      CALL FCN(NPAR,G,AMIN,U,4)
      CALL MPRINT(1,AMIN)
      CALL FCN(NPAR,G,F   ,U,4)
      IF  (F .NE. AMIN)  GO TO 160
      NFCN = 3
      CALL COMAND
      IF (CWORD2.EQ.RET1 .OR.CWORD2.EQ.RET2 .OR.CWORD2.EQ.RET3) RETURN
      GO TO 110
  160 CONTINUE
      WRITE (ISYSWR,880) AMIN, F
      STOP
  880 FORMAT (  62H0FOR THE ABOVE VALUES OF THE PARAMETERS, FCN IS TIME-
     +DEPENDENT/   4H0F = ,E22.14,  15H FOR FIRST CALL/   4H F =,E22.14,
     +  11H FOR SECOND)
      END
      SUBROUTINE MINOS
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
CC        PERFORMS A MINOS ERROR ANALYSIS ON THOSE PARAMETERS FOR
CC        WHICH IT IS REQUESTED ON THE MINOS COMMAND CARD.
CC        THE PARAMETER IN QUESTION IS VARIED, AND THE MINIMUM OF THE
CC        FUNCTION WITH RESPECT TO THE OTHER PARAMETERS IS FOLLOWED
CC        UNTIL IT CROSSES THE VALUE FMIN+UP.
CC
      COMMON
     1/MINERR/ ERP(30)     ,ERN(30)
     2/PARINT/ X(15)       ,XT(15)     ,DIRIN(15)  ,MAXINT     ,NPAR
     3/PAREXT/ U(30)       ,NAM(30)    ,WERR(30)   ,MAXEXT     ,NU
     4/LIMITS/ ALIM(30)    ,BLIM(30)   ,LCODE(30)  ,LCORSP(30) ,LIMSET
     5/VARIAN/ V(15,15)
     7 /FIX/    XS(15),   XTS(15),   WTS(15),   IPFIX(15),   NPFIX
     C/CASC/ JH, JL, Y(16)
     F/DERIVA/ G(30)       ,G2(30)
     G/SIMVEC/ P(15,16)    ,PSTAR(15)  ,PSTST(15)  ,PBAR(15)   ,PRHO(15)
     J/VARIAT/ VT(15,15)
      COMMON
     6/UNIT/  ISYSRD,ISYSWR,ISYSPU
     8/TITLE/ TITLE(13),DATE(2),ISW(7),NBLOCK
     9/CONVER/ EPSI,APSI,VTEST,NSTEPQ,NFCN,NFCNMX
     A/CARD/ CWORD,CWORD2,CWORD3,WORD7(7)
     B/MINIMA/ AMIN,UP,NEWMIN,ITAUR,SIGMA
      DIMENSION LMI(30), KIRSCH(5),XDEV(15), W(30),SPT(3,20)
      DATA APOS,ANEG,ADOT,ASTAR / 4HPOSI,4HNEGA,1H., 1H* /
      DATA BLANK/1H /
      IF (NPAR .LE. 0)  GO TO 700
C                                        . . UNPACK PARAMETER REQUESTS .
      MARC = 0
      DO 5 I=1,30
    5 LMI(I) = 0
      KNT = 0
      DO  20 I= 2, 7
      LIME = WORD7(I) + 0.5D0
      IF (LIME .EQ. 0)  GO TO  20
      DO  10 K= 1, 5
      K2 = 6 - K
      LEMON = MOD(LIME,100)
      KIRSCH(K2) = LEMON
   10 LIME = LIME/100
      DO  15 J= 1, 5
      LEMON = KIRSCH(J)
      IF (LEMON .GT. MAXEXT)  GO TO  14
      IF (LEMON .EQ. 0)  GO TO  15
      IF (LCORSP(LEMON) .EQ. 0)  GO TO  14
      KNT = KNT + 1
      LMI(KNT) = LEMON
      GO TO  15
   14 MARC = 1
   15 CONTINUE
   20 CONTINUE
      IF (KNT .GT. 0)  GO TO  40
      DO  30 I= 1, MAXEXT
      IF (LCORSP(I) .LT. 1)  GO TO  30
      KNT = KNT + 1
      LMI(KNT) = I
      IF (KNT .EQ. 30)  GO TO  40
   30 CONTINUE
   40 CONTINUE
      IF (MARC .EQ. 1)  WRITE (ISYSWR,811)
      WRITE (ISYSWR, 810)  (LMI(IZ3),IZ3=1,KNT)
C                                        . . SAVE AND PREPARE START VALS
      SIGSAV = SIGMA
      TOLER = EPSI
      APSI = EPSI*0.5D0
      ITAUR = 1
      ABEST=AMIN
      AIM = AMIN + UP
      NSAVE = NFCNMX
      MPAR=NPAR
      DO 130 I= 1, MPAR
      XT(I) = X(I)
      DO 125 J= 1, MPAR
  125 VT(I,J) = V(I,J)
  130 CONTINUE
      DO 135 I= 1, NU
      ERP(I) = 0.D0
      ERN(I) = 0.D0
  135 W(I) = WERR(I)
      KNT = 0
C                                        . . . . . START MAIN LOOP . . .
  150 KNT = KNT + 1
      ISW(1) = 0
      NLIMIT = NFCN + NSAVE
      IF (KNT .GT. 30)  GO TO 590
      IF (LMI(KNT) .LT. 1)  GO TO 590
      ILAX = LMI(KNT)
      ERP(ILAX) = 0.D0
      IT = LCORSP(ILAX)
      XTIT = XT(IT)
      CALL INTOEX(XT)
      UT = U(ILAX)
      SPT(1,1) = UT
      SPT(2,1) = AIM
      SPT(3,1) = BLANK
      SPT(1,2) = UT
      SPT(2,2) = ABEST
      SPT(3,2) = ASTAR
      SPT(1,3) = UT
      SPT(2,3) = AIM + 0.2D0*(AIM-ABEST)
      SPT(3,3) = ADOT
      NSPT = 3
      IF (LCODE(ILAX) .GT. 1)  GO TO 160
      ALIM(ILAX) = UT -100.D0*W(ILAX)
      BLIM(ILAX) = UT +100.D0*W(ILAX)
  160 CONTINUE
      XUNIT = SQRT(UP/VT(IT,IT))
      MARC = 0
      DO 162 I= 1, MPAR
      IF (I .EQ. IT)  GO TO 162
      MARC = MARC + 1
      XDEV(MARC) = XUNIT*VT(IT,I)
  162 CONTINUE
      CALL FIXPAR (IT,1,ILAX)
      SIG = 1.0D0
      ASIG = APOS
      DULIM = BLIM(ILAX) - UT
      IF(ISW(2).LT.1) GO TO 460
C                                        . SIG=SIGN OF ERROR BEING CALCD
  165 WRITE (ISYSWR,806)  ASIG,ILAX,NAM(ILAX)
      ITER = 0
      LIMSET = 0
      DU1 = SIG*W(ILAX)
      IF (ABS(DU1) .LE. DULIM)  GO TO 180
      LIMSET = 1
      DU1 = SIG * DULIM
      IF (DULIM .LT. 1.0D-3*W(ILAX))    GO TO 440
  180 U(ILAX) = UT + DU1
      IF (NPAR .EQ. 0)  GO TO 205
      FAC = DU1/W(ILAX)
      DO 185 I= 1, NPAR
  185 X(I) = XT(I) + FAC*XDEV(I)
  200 CALL INTOEX (X)
  205 WRITE (ISYSWR,801)  ILAX,UT,DU1,U(ILAX)
      CALL FCN(NPAR,G,AMIN,U,4)
      NFCN = NFCN + 1
      NFCNMX = NLIMIT - NFCN
      CALL MIGRAD
      IF (AMIN .LT. ABEST)  GO TO 650
      IF (ISW(1) .GE. 1)  GO TO 450
      IF (ISW(2) .GE. 2)  GO TO 240
      NFCNMX = NLIMIT - NFCN
      CALL SIMPLX
      IF (AMIN .LT. ABEST)  GO TO 650
      IF (ISW(1) .GE. 1)  GO TO 450
      NFCNMX = NLIMIT - NFCN
      CALL MIGRAD
      IF (AMIN .LT. ABEST)  GO TO 650
      IF (ISW(1) .GE. 1)  GO TO 450
      IF (ISW(2) .LT. 2)  GO TO 460
  240 CREM = AMIN - ABEST
      NSPT = NSPT + 1
      SPT(1,NSPT) = U(ILAX)
      SPT(2,NSPT) = AMIN
      SPT(3,NSPT) = ASIG
      IF (CREM .LE. 0.0D0)  GO TO 650
      SQUC = SQRT(UP/CREM)
      IF (ABS(AMIN-AIM) .LT. TOLER)  GO TO 400
C                                        . . ANOTHER ITERATION NECESSARY
      ITER = ITER + 1
      IF (ITER .GT. 6)  GO TO 430
      IF (ITER .EQ. 1)  GO TO 270
C       CHECK PREVIOUS ITERATION TO AVOID OSCILLATING
      SQUC2 = SQUC
      IF ((SQUC2-1.0D0) * (SQUC1-1.0D0) .GT. 0.0)  GO TO 270
      SQUC = 0.65D0*SQUC2 + 0.35D0
      SQUC11 = 1.0D0/SQUC1
      IF ((SQUC11-SQUC)*(SQUC-1.0D0) .GT. 0.0D0)  GO TO 270
      WRITE (ISYSWR,260)
  260 FORMAT (  44H MINOS IS HAVING TROUBLE WITH THIS PARAMETER)
      SQUC = 0.5D0*SQUC11 + 0.5D0
  270 CONTINUE
      SQUC1 = SQUC
      DU1 = DU1 * SQUC
      IF (ABS(DU1) .LE. DULIM)  GO TO 280
      IF (LIMSET .EQ. 1)  GO TO 440
      LIMSET = 1
      DU1 = SIG*DULIM
  280 U(ILAX) = UT + DU1
      DO 290 I= 1, NPAR
  290 X(I) = XT(I) + SQUC*(X(I)-XT(I))
      GO TO 200
C                                        . ERROR SUCCESSFULLY CALCULATED
  400 EROS = DU1 * SQUC
      WRITE (ISYSWR,808)  ASIG,ILAX,NAM(ILAX),EROS
  410 WRITE (ISYSWR,812)
      IF (SIG .GT. 0.D0)  GO TO 420
      ERN(ILAX) = EROS
      GO TO 500
  420 ERP(ILAX) = EROS
      SIG = -1.0D0
      ASIG = ANEG
      DULIM = UT - ALIM(ILAX)
      GO TO 165
C                                        . . . . . . . . FAILURE RETURNS
  430 WRITE (ISYSWR, 809)
      EROS = 0.D0
      GO TO 410
  440 WRITE (ISYSWR, 807)  ASIG,ILAX,NAM(ILAX),DULIM
      EROS = 0.D0
      GO TO 410
  450 WRITE (ISYSWR, 802)  NSAVE
      GO TO 500
  460 WRITE (ISYSWR, 805)
C                                        . . PARAMETER FINISHED. RESET V
  500 CONTINUE
      CALL RESTOR(1)
      ISW(2) = 3
      DO 560 I= 1, MPAR
      DO 550 J= 1, MPAR
  550 V(I,J) = VT(I,J)
  560 CONTINUE
      IF (NSPT .LT. 9)  GO TO 150
      NSPT3 = NSPT - 3
      WRITE (ISYSWR,813)  ILAX,NAM(ILAX),NSPT3
      CALL PLTCON(NSPT,SPT)
      WRITE(ISYSWR,814)  ILAX
      GO TO 150
C                                        . . . . PRINTOUT FINAL VALUES .
  590 DO 595 I= 1, MPAR
  595 X(I) = XT(I)
      CALL INTOEX (XT)
      SIGMA = SIGSAV
      AMIN = ABEST
      CALL MPRINT(2,AMIN)
      CALL MATOUT(0.0D0, 1)
      GO TO 700
C                                        . . . NEW MINIMUM FOUND . . . .
  650 NEWMIN = 1
      ISW(2) = 0
      CALL RESTOR(1)
      CALL EXTOIN(X)
      DO 670 I= 1, NPAR
  670 DIRIN(I) = SQRT(VT(I,I)*UP)
  700 RETURN
  801 FORMAT (  10H0PARAMETER,I4,   7H SET TO,E11.3,3H + ,E10.3,3H = ,E1
     +2.3)
  802 FORMAT (  87H0CALL LIMIT EXCEEDED.  CALCULATION OF MINOS ERROR FOR
     + THIS PARAMETER REQUIRES MORE THAN,I5,  11H FCN CALLS./)
  805 FORMAT (/45X   ,46HMINOS ERROR NOT CALCULATED FOR THIS PARAMETER.)
  806 FORMAT (  18H0DETERMINATION OF ,A4,  30HTIVE MINOS ERROR FOR PARAM
     +ETER,I3, 2X ,A10)
  807 FORMAT (/45X,4HTHE ,A4,  29HTIVE MINOS ERROR OF PARAMETER,I3,   2H
     +, ,A10,      9H, EXCEEDS ,E12.4)
  808 FORMAT (/45X,4HTHE ,A4,  29HTIVE MINOS ERROR OF PARAMETER,I3,   2H
     +, ,A10,      4H, IS ,E12.4)
  809 FORMAT (/45X  ,48HTOO MANY ITERATIONS. SEE PLOT BELOW FOR DETAILS.
     +)
  810 FORMAT (  38H MINOS ERRORS REQUESTED FOR PARAMETERS,30I3//)
  811 FORMAT (  55H THERE ARE MISTAKES IN THE MINOS COMMAND CARD JUST RE
     1AD)
  812 FORMAT (45X, 75(1H*))
  813 FORMAT (50H1MINOS FINDS NON-PARABOLIC BEHAVIOR FOR PARAMETER ,I3,
     +2H, ,A10/28H ERROR CALCULATION REQUIRED ,I3,63H MINIMIZATIONS.
     + A SUMMARY OF POINTS FOUND IS PLOTTED BELOW.  /13H0   FCN VALUE )
  814 FORMAT (20H+         PARAMETER  ,I3,1H,/)
      END
      SUBROUTINE MPRINT  (IKODE,FVAL)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
CC        PRINTS THE VALUES OF THE PARAMETERS AT THE TIME OF THE CALL.
CC        ALSO PRINTS OTHER RELEVANT INFORMATION SUCH AS FUNCTION VALUE,
CC        ESTIMATED DISTANCE TO MINIMUM, PARAMETER ERRORS, STEP SIZES.
CC        ACCORDING TO THE VALUE OF IKODE,THE PRINTOUT IS LONG FORMAT,
CC        SHORT FORMAT, OR MINOS FORMAT (0,1,2)
CC
      COMMON
     1/MINERR/ ERP(30)     ,ERN(30)
     2/PARINT/ X(15)       ,XT(15)     ,DIRIN(15)  ,MAXINT     ,NPAR
     3/PAREXT/ U(30)       ,NAM(30)    ,WERR(30)   ,MAXEXT     ,NU
     4/LIMITS/ ALIM(30)    ,BLIM(30)   ,LCODE(30)  ,LCORSP(30) ,LIMSET
     5/VARIAN/ V(15,15)
     7 /FIX/    XS(15),   XTS(15),   WTS(15),   IPFIX(15),   NPFIX
     C/CASC/ JH, JL, Y(16)
     F/DERIVA/ G(30)       ,G2(30)
     G/SIMVEC/ P(15,16)    ,PSTAR(15)  ,PSTST(15)  ,PBAR(15)   ,PRHO(15)
     J/VARIAT/ VT(15,15)
      COMMON
     6/UNIT/  ISYSRD,ISYSWR,ISYSPU
     8/TITLE/ TITLE(13),DATE(2),ISW(7),NBLOCK
     9/CONVER/ EPSI,APSI,VTEST,NSTEPQ,NFCN,NFCNMX
     A/CARD/ CWORD,CWORD2,CWORD3,WORD7(7)
     B/MINIMA/ AMIN,UP,NEWMIN,ITAUR,SIGMA
C                                        . GET TIME AND PRINT HEADINGS .
      CALL TIMEX(TI)
      IF (IKODE .EQ. 2)  GO TO 10
      WRITE (ISYSWR,1000)
      GO TO 18
C                  IKODE = 2        MINOS PRINTOUT HAS SPECIAL HEADINGS.
   10 WRITE (ISYSWR,1006)  TITLE,DATE
   18 E = SIGMA
      KOUNT = 0
C                                        . . . LOOP OVER PARAMETERS . .
      DO 200 I= 1, NU
      IF (NAM (I))  20,200,20
   20 L = LCORSP(I)
      IF (L .EQ. 0)  GO TO 55
C              VARIABLE PARAMETER.  CALCULATE EXTERNAL ERROR IF V EXISTS
      IF (ISW(2) .LT. 1)  GO TO 27
      DX = SQRT(ABS(V(L,L)*UP))
      IF (LCODE(I) .LE. 1)  GO TO 26
      AL = ALIM(I)
      BA = BLIM(I) - AL
      DU1 = AL + 0.5D0 *(SIN(X(L)+DX) +1.0D0) * BA - U(I)
      DU2 = AL + 0.5D0 *(SIN(X(L)-DX) +1.0D0) * BA - U(I)
      IF (DX .GT. 1.0D0)  DU1 = BA
      DX = 0.5D0 * (ABS(DU1) + ABS(DU2))
   26 WERR(I) = DX
   27 X1 = X(L)
      X2 = DIRIN(L)
      IF (IKODE .LT. 2)  GO TO 29
      X1 = ERP(I)
      X2 = ERN(I)
   29 IF (KOUNT)  30,30,40
   30 KOUNT = 1
      WRITE (ISYSWR,1001) FVAL,NFCN,TI,E, L,I,NAM(I),U(I),WERR(I),X1,X2
      GO TO 45
   40 WRITE (ISYSWR,1002)   L,I,NAM(I),U(I),WERR(I),X1,X2
   45 IF (LCODE(I) .LE. 1)  GO TO 200
      IF (ABS(COS(X(L))) .LT. 0.001)  WRITE (ISYSWR,1004)
      GO TO 200
C                           FIXED PARAMETER.  PRINT ONLY IF IKODE .GT.0
   55 IF (IKODE .EQ. 0)  GO TO 200
      IF (KOUNT)  60,60,70
   60 KOUNT = 1
      WRITE (ISYSWR,1001) FVAL,NFCN,TI,E, L,I,NAM(I),U(I)
      GO TO 200
   70 WRITE (ISYSWR,1003)                   I,NAM(I),U(I)
  200 CONTINUE
      IF (IKODE.GE.1 .AND.ISW(2).GE.1)  WRITE (ISYSWR,1005)  UP
      RETURN
 1000 FORMAT(/ 4X,9HFCN VALUE,5X,5HCALLS,4X,4HTIME,4X,6H EDM   ,4X   ,75
     +HINT.EXT. PARAMETER     VALUE         ERROR      INTERN.VALUE  INT
     +.STEP SIZE)
 1001 FORMAT (E15.7,I7,F9.2,E11.2,I6,I4,1X,A10,4E14.5)
 1002 FORMAT (1H ,41X,I6,I4,1X,A10,4E14.5)
 1003 FORMAT (1H  ,47X  ,I4,1X,A10,4E14.5)
 1004 FORMAT (1H ,52X  ,42HWARNING -   - ABOVE PARAMETER IS AT LIMIT.)
 1005 FORMAT (/45X   ,40HERRORS CORRESPOND TO FUNCTION CHANGE OF ,F10.4)
 1006 FORMAT (1H1,40X,36HRESULTS OF FULL MINOS ERROR ANALYSIS/41X,36(1H*
     +)/        /20X ,15A4//80X   ,9HPARABOLIC,4X  ,26H...... MINOS ERRO
     +RS ......           / 4X,9HFCN VALUE,5X,5HCALLS,4X,4HTIME,4X,6H ED
     +M   ,4X   ,75HINT.EXT. PARAMETER     VALUE         ERROR        PO
     +SITIVE      NEGATIVE   )
      END
      SUBROUTINE MPUNCH
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
CC        PUNCHES CURRENT PARAMETER VALUES AND STEP SIZES ONTO CARDS
CC        IN FORMAT WHICH CAN BE REREAD BY MINUIT FOR RESTARTING.
CC        THE COVARIANCE MATRIX IS ALSO PUNCHED IF IT EXISTS.
CC
      COMMON
     1/MINERR/ ERP(30)     ,ERN(30)
     2/PARINT/ X(15)       ,XT(15)     ,DIRIN(15)  ,MAXINT     ,NPAR
     3/PAREXT/ U(30)       ,NAM(30)    ,WERR(30)   ,MAXEXT     ,NU
     4/LIMITS/ ALIM(30)    ,BLIM(30)   ,LCODE(30)  ,LCORSP(30) ,LIMSET
     5/VARIAN/ V(15,15)
     7 /FIX/    XS(15),   XTS(15),   WTS(15),   IPFIX(15),   NPFIX
     C/CASC/ JH, JL, Y(16)
     F/DERIVA/ G(30)       ,G2(30)
     G/SIMVEC/ P(15,16)    ,PSTAR(15)  ,PSTST(15)  ,PBAR(15)   ,PRHO(15)
     J/VARIAT/ VT(15,15)
      COMMON
     6/UNIT/  ISYSRD,ISYSWR,ISYSPU
     8/TITLE/ TITLE(13),DATE(2),ISW(7),NBLOCK
     9/CONVER/ EPSI,APSI,VTEST,NSTEPQ,NFCN,NFCNMX
     A/CARD/ CWORD,CWORD2,CWORD3,WORD7(7)
     B/MINIMA/ AMIN,UP,NEWMIN,ITAUR,SIGMA
      DIMENSION VC(7)
      CALL TIMEX(TI)
      WRITE (ISYSPU,1000)  TITLE,DATE,TI
      DO 200 I= 1, NU
      IF (NAM (I))  20,200,20
C    (AVOID PUNCHING MINUS ZERO)
   20 IF (WERR(I) .EQ. 0.0) WERR(I) = 0.0D0
      IF (LCODE(I) .GT. 1)  GO TO 100
C         PARAMETER WITHOUT LIMITS
      WRITE (ISYSPU,1001)  I,NAM(I),U(I),WERR(I)
      GO TO 200
C         PARAMETER WITH LIMITS
  100 CONTINUE
      WRITE (ISYSPU,1001) I,NAM(I),U(I),WERR(I),ALIM(I),BLIM(I)
  200 CONTINUE
      WRITE (ISYSPU,1002)
      IF (ISW(2) .LT. 3)  GO TO 300
      WRITE (ISYSPU,1003)  NPAR
      K = 0
      KC = 0
      DO 250 I= 1, NPAR
      DO 250 J= 1, NPAR
      K = K + 1
      VC(K) = V(I,J)
      IF (K .NE. 7)  GO TO 250
      K = 0
      KC = KC + 1
      WRITE(ISYSPU,1004)  VC,TI,NBLOCK,KC
  250 CONTINUE
      IF (K .EQ. 0)  GO TO 300
      KP1 = K + 1
      DO 260 I= KP1, 7
  260 VC(I) = 0.D0
      KC = KC + 1
      WRITE(ISYSPU,1004)  VC,TI,NBLOCK,KC
  300 RETURN
 1000 FORMAT (15A4,10X,F6.3)
 1001 FORMAT (I10,A10,4E10.4)
 1002 FORMAT (1H )
 1003 FORMAT (10HCOVARIANCE ,I10)
 1004 FORMAT (7E10.3,F6.3,2I2)
      END
      SUBROUTINE MSCAN
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
CC        SCANS THE VALUES OF FCN AS A FUNCTION OF ONE PARAMETER
CC        AND PLOTS THE RESULTING VALUES AS A CURVE USING PLTCON.
CC        IT MAY BE CALLED TO SCAN ONE PARAMETER OR ALL PARAMETERS.
CC        RETAINS THE BEST FUNCTION AND PARAMETER VALUES FOUND.
      COMMON
     1/MINERR/ ERP(30)     ,ERN(30)
     2/PARINT/ X(15)       ,XT(15)     ,DIRIN(15)  ,MAXINT     ,NPAR
     3/PAREXT/ U(30)       ,NAM(30)    ,WERR(30)   ,MAXEXT     ,NU
     4/LIMITS/ ALIM(30)    ,BLIM(30)   ,LCODE(30)  ,LCORSP(30) ,LIMSET
     5/VARIAN/ V(15,15)
     7 /FIX/    XS(15),   XTS(15),   WTS(15),   IPFIX(15),   NPFIX
     C/CASC/ JH, JL, Y(16)
     F/DERIVA/ G(30)       ,G2(30)
     G/SIMVEC/ P(15,16)    ,PSTAR(15)  ,PSTST(15)  ,PBAR(15)   ,PRHO(15)
     J/VARIAT/ VT(15,15)
      COMMON
     6/UNIT/  ISYSRD,ISYSWR,ISYSPU
     8/TITLE/ TITLE(13),DATE(2),ISW(7),NBLOCK
     9/CONVER/ EPSI,APSI,VTEST,NSTEPQ,NFCN,NFCNMX
     A/CARD/ CWORD,CWORD2,CWORD3,WORD7(7)
     B/MINIMA/ AMIN,UP,NEWMIN,ITAUR,SIGMA
      DIMENSION SPT(3,101)
      DATA STAR,SYMX/1H*,1HX/
      XLREQ = AMIN1(WORD7(3),WORD7(4))
      XHREQ = AMAX1(WORD7(3),WORD7(4))
      NCALL = WORD7(2) + 0.01D0
      IF (NCALL .LE. 1)  NCALL = 41
      IF (NCALL .GT. 100)  NCALL = 100
      NCCALL = NCALL
      IPARWD = WORD7(1) + 0.1D0
      IPAR = MAX0(IPARWD, 0)
      IF (IPARWD .GT. 0)  GO TO 200
C
C         EQUIVALENT TO A LOOP OVER PARAMETERS REQUESTED
  100 IPAR = IPAR + 1
      IF (IPAR .GT. NU)  GO TO 900
      IF (LCORSP(IPAR) .LE. 0)  GO TO 100
C         SET UP RANGE FOR PARAMETER IPAR
  200 CONTINUE
      UBEST = U(IPAR)
      SPT(1,1) = UBEST
      SPT(2,1) = AMIN
      SPT(3,1) = SYMX
      NSPT = 1
      IF (LCODE(IPAR) .GT. 1)  GO TO 300
C         NO LIMITS ON PARAMETER
      IF (XLREQ .EQ. XHREQ)  GO TO 250
      UNEXT = XLREQ
      STEP = (XHREQ-XLREQ)/FLOAT(NCALL-1)
      GO TO 500
  250 CONTINUE
      XL = UBEST - WERR(IPAR)
      XH = UBEST+  WERR(IPAR)
      CALL BINSIZ(XL,XH,NCALL, UNEXT,UHIGH,NBINS,STEP)
      NCCALL = NBINS + 1
      GO TO 500
C         LIMITS ON PARAMETER
  300 CONTINUE
      IF (XLREQ .EQ. XHREQ)  GO TO 350
      XL = AMAX1(XLREQ,ALIM(IPAR))
      XH = AMIN1(XHREQ,BLIM(IPAR))
      IF (XL .GE. XH)  GO TO 700
      UNEXT = XL
      STEP = (XH-XL)/FLOAT(NCALL-1)
      GO TO 500
  350 CONTINUE
      UNEXT = ALIM(IPAR)
      STEP = (BLIM(IPAR)-ALIM(IPAR))/FLOAT(NCALL-1)
C         MAIN SCANNING LOOP OVER PARAMETER IPAR
  500 CONTINUE
      DO 600 ICALL = 1, NCCALL
      U(IPAR) = UNEXT
      CALL FCN(NPAR,G,FNEXT,U,4)
      NFCN = NFCN + 1
      NSPT = NSPT + 1
      SPT(1,NSPT) = UNEXT
      SPT(2,NSPT) = FNEXT
      SPT(3,NSPT) = STAR
      IF (FNEXT .GT. AMIN)  GO TO 530
      AMIN = FNEXT
      UBEST = UNEXT
  530 CONTINUE
      UNEXT = UNEXT + STEP
  600 CONTINUE
C         FINISHED WITH SCAN OF PARAMETER IPAR
      U(IPAR) = UBEST
      CALL EXTOIN(X)
      WRITE (ISYSWR,1001)  IPAR,NAM(IPAR)
      CALL PLTCON(NSPT,SPT)
      GO TO 800
  700 CONTINUE
      WRITE (ISYSWR,1000) IPAR
  800 CONTINUE
      IF (IPARWD .LE. 0)  GO TO 100
C         FINISHED WITH ALL PARAMETERS
  900 CONTINUE
      CALL MPRINT(1,AMIN)
      RETURN
 1000 FORMAT (46H REQUESTED RANGE OUTSIDE LIMITS FOR PARAMETER  ,I3/)
 1001 FORMAT (22H1SCAN OF PARAMETER NO.  ,I3,3H,   ,A10)
      END
      DOUBLE PRECISION FUNCTION PINTF(PEXTI,I)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
CC        CALCULATES THE INTERNAL PARAMETER VALUE PINTF CORRESPONDING
CC        TO THE EXTERNAL VALUE PEXTI FOR PARAMETER I.
CC
      COMMON
     1/MINERR/ ERP(30)     ,ERN(30)
     2/PARINT/ X(15)       ,XT(15)     ,DIRIN(15)  ,MAXINT     ,NPAR
     3/PAREXT/ U(30)       ,NAM(30)    ,WERR(30)   ,MAXEXT     ,NU
     4/LIMITS/ ALIM(30)    ,BLIM(30)   ,LCODE(30)  ,LCORSP(30) ,LIMSET
     5/VARIAN/ V(15,15)
     7 /FIX/    XS(15),   XTS(15),   WTS(15),   IPFIX(15),   NPFIX
     C/CASC/ JH, JL, Y(16)
     F/DERIVA/ G(30)       ,G2(30)
     G/SIMVEC/ P(15,16)    ,PSTAR(15)  ,PSTST(15)  ,PBAR(15)   ,PRHO(15)
     J/VARIAT/ VT(15,15)
      COMMON
     6/UNIT/  ISYSRD,ISYSWR,ISYSPU
     8/TITLE/ TITLE(13),DATE(2),ISW(7),NBLOCK
     9/CONVER/ EPSI,APSI,VTEST,NSTEPQ,NFCN,NFCNMX
     A/CARD/ CWORD,CWORD2,CWORD3,WORD7(7)
     B/MINIMA/ AMIN,UP,NEWMIN,ITAUR,SIGMA
      DATA BIG, SMALL / 1.570796326795 , -1.570796326795 /
      IGO = LCODE(I)
      GO TO (100,200,300,400),IGO
C--       IGO = 1  MEANS NO LIMITS
  100 PINTF = PEXTI
      GO TO 800
  200 CONTINUE
  300 CONTINUE
C--       IGO = 4  MEANS THERE ARE TWO LIMITS
  400 ALIMI = ALIM(I)
      BLIMI = BLIM(I)
      IF (PEXTI-ALIMI)  440,500,460
  440 A = SMALL
  450 PINTF = A
      PEXTI = ALIMI + 0.5D0* (BLIMI-ALIMI) *(SIN(A) +1.0D0)
      LIMSET=1
      WRITE (ISYSWR,241)  I
      GO TO 800
  460 IF (BLIMI-PEXTI)  470,520,480
  470 A = BIG
      GO TO 450
  480 YY=2.0*(PEXTI-ALIMI)/(BLIMI-ALIMI) - 1.0
      PINTF = ATAN(YY/SQRT(1.0- YY**2) )
      GO TO 800
  500 PINTF = SMALL
      GO TO 800
  520 PINTF = BIG
  800 RETURN
  241 FORMAT (  19H WARNING - VARIABLE,I3,  46H HAS BEEN BROUGHT BACK IN
     +SIDE LIMITS BY PINTF.)
      END
      SUBROUTINE PLTCON(NSPT,SPT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
CC        PLOTS POINTS IN ARRAY SPT ONTO ONE PAGE WITH LABELLED AXES
CC        NSPT IS THE NUMBER OF POINTS TO BE PLOTTED
CC        SPT(1,I) = X-COORD. OF ITH POINT
CC        SPT(2,I) = Y-COORD. OF ITH POINT
CC        SPT(3,I) = CHARACTER TO BE PLOTTED AT THIS POSITION
CC
      COMMON
     1/MINERR/ ERP(30)     ,ERN(30)
     2/PARINT/ X(15)       ,XT(15)     ,DIRIN(15)  ,MAXINT     ,NPAR
     3/PAREXT/ U(30)       ,NAM(30)    ,WERR(30)   ,MAXEXT     ,NU
     4/LIMITS/ ALIM(30)    ,BLIM(30)   ,LCODE(30)  ,LCORSP(30) ,LIMSET
     5/VARIAN/ V(15,15)
     7 /FIX/    XS(15),   XTS(15),   WTS(15),   IPFIX(15),   NPFIX
     C/CASC/ JH, JL, Y(16)
     F/DERIVA/ G(30)       ,G2(30)
     G/SIMVEC/ P(15,16)    ,PSTAR(15)  ,PSTST(15)  ,PBAR(15)   ,PRHO(15)
     J/VARIAT/ VT(15,15)
      COMMON
     6/UNIT/  ISYSRD,ISYSWR,ISYSPU
     8/TITLE/ TITLE(13),DATE(2),ISW(7),NBLOCK
     9/CONVER/ EPSI,APSI,VTEST,NSTEPQ,NFCN,NFCNMX
     A/CARD/ CWORD,CWORD2,CWORD3,WORD7(7)
     B/MINIMA/ AMIN,UP,NEWMIN,ITAUR,SIGMA
      DIMENSION SPT(3,2) , ALINE(100), SAV(3)
      DIMENSION XVALUS(12)
      DATA DOT,SLASH,ABLANK/1H.,1H/,1H /
      DATA MAXNX,MAXNY/ 98, 56/
      IF (NSPT .LE. 1)  RETURN
      XBEST = SPT(1,1)
      YBEST = SPT(2,1)
      CHBEST = SPT(3,1)
C         ORDER THE POINTS BY DECREASING Y
      KM1 = NSPT - 1
      DO 150 I= 1, KM1
      IQUIT = 0
      NI = NSPT - I
      DO 140 J= 1, NI
      IF (SPT(2,J) - SPT(2,J+1))  120, 140, 140
  120   DO 130 I3= 1, 3
        SAV(I3) = SPT(I3,J)
        SPT(I3,J) = SPT(I3,J+1)
  130   SPT(I3,J+1) = SAV(I3)
      IQUIT = 1
  140 CONTINUE
      IF (IQUIT)  160, 160, 150
  150 CONTINUE
  160 CONTINUE
C         FIND EXTREME VALUES
      XMAX = SPT(1,1)
      XMIN = XMAX
      DO 200 I= 1, NSPT
        IF (SPT(1,I) .GT. XMAX)  XMAX = SPT(1,I)
        IF (SPT(1,I) .LT. XMIN)  XMIN = SPT(1,I)
  200 CONTINUE
      CALL BINSIZ(XMIN,XMAX,MAXNX,XMIN,XMAX,NX,BWIDX)
      ANX = NX
      YMAX = SPT(2,1)
      YMIN = SPT(2,NSPT)
      IF (YMAX .EQ. YBEST)  YMAX=YBEST + 1.0
      CALL BINSIZ(YMIN,YMAX,MAXNY,YMIN,YMAX,NY,BWIDY)
      ANY = NY
      IF (CHBEST .EQ. ABLANK)  GO TO 50
      XBEST = 0.5D0 * (XMAX+XMIN)
      YBEST = 0.5D0 * (YMAX+YMIN)
   50 CONTINUE
C         FIND SCALE CONSTANTS
      AX = 1.0D0/BWIDX
      AY = 1.0D0/BWIDY
      BX = -AX*XMIN + 2.0D0
      BY = -AY*YMIN - 2.0D0
C         CONVERT POINTS TO GRID POSITIONS
      DO 300 I= 1, NSPT
      SPT(1,I) = AX*SPT(1,I) + BX
  300 SPT(2,I) = ANY-AY*SPT(2,I) - BY
      NXBEST = AX*XBEST + BX
      NYBEST = ANY  - AY*YBEST - BY
C         PRINT THE CONTOURS
      NY = ANY + 1.D0
      NX = ANX + 2.D0
      ISP1 = 1
      LINODD = 1
      DO 400 I= 1, NY
      DO 310 IBK= 1, NX
  310 ALINE (IBK) = ABLANK
      ALINE(1) = DOT
      ALINE(NX) = DOT
      ALINE(NXBEST) = DOT
      IF (I.NE.1 .AND. I.NE.NYBEST .AND. I.NE.NY)  GO TO 320
      DO 315 J= 1, NX
  315 ALINE(J) = DOT
  320 CONTINUE
      YPRT = YMAX - FLOAT(I-1)*BWIDY
      IF (ISP1 .GT. NSPT)  GO TO 350
        DO 340 K= ISP1,NSPT
      KS = SPT(2,K)
      IF (KS .GT. I)  GO TO 345
      IX = SPT(1,K)
  340 ALINE(IX) = SPT(3,K)
        ISP1 = NSPT + 1
        GO TO 350
  345   ISP1 = K
  350 CONTINUE
      IF (LINODD .EQ. 1 .OR. I .EQ. NY)  GO TO 380
      LINODD = 1
      WRITE (ISYSWR, 1007)       (ALINE(IW),IW=1,NX)
      GO TO 400
  380 WRITE (ISYSWR, 1001) YPRT, (ALINE(IW),IW=1,NX)
      LINODD = 0
  400 CONTINUE
C         PRINT LABELS ON X-AXIS EVERY TEN COLUMNS
      DO 410 IBK= 1, NX
      ALINE(IBK) = ABLANK
      IF (MOD(IBK,10) .EQ. 1)  ALINE(IBK) = SLASH
  410 CONTINUE
      WRITE (ISYSWR, 1007)       (ALINE(IW),IW=1,NX)
C
      DO 430 IBK= 1, 12
  430 XVALUS(IBK) = XMIN + FLOAT(IBK-1)*10.*BWIDX
      ITEN = (NX+9) / 10
      WRITE (ISYSWR,1004)  (XVALUS(IBK), IBK=1,ITEN)
      WRITE (ISYSWR,1002)  BWIDX
  500 RETURN
 1001 FORMAT (F15.7,3H ..,100A1)
 1002 FORMAT (40X,13HONE COLUMN =   ,F13.7)
 1003 FORMAT (5X,A10)
 1004 FORMAT (12X,12F10.3)
 1007 FORMAT (18X , 100A1)
      END
      SUBROUTINE RAZZIA(YNEW,PNEW)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
CC        CALLED ONLY BY SIMPLEX (AND IMPROV) TO ADD A NEW POINT
CC        AND REMOVE AN OLD ONE FROM THE CURRENT SIMPLEX, AND GET THE
CC        ESTIMATED DISTANCE TO MINIMUM.
CC
      COMMON
     1/MINERR/ ERP(30)     ,ERN(30)
     2/PARINT/ X(15)       ,XT(15)     ,DIRIN(15)  ,MAXINT     ,NPAR
     3/PAREXT/ U(30)       ,NAM(30)    ,WERR(30)   ,MAXEXT     ,NU
     4/LIMITS/ ALIM(30)    ,BLIM(30)   ,LCODE(30)  ,LCORSP(30) ,LIMSET
     5/VARIAN/ V(15,15)
     7 /FIX/    XS(15),   XTS(15),   WTS(15),   IPFIX(15),   NPFIX
     C/CASC/ JH, JL, Y(16)
     F/DERIVA/ G(30)       ,G2(30)
     G/SIMVEC/ P(15,16)    ,PSTAR(15)  ,PSTST(15)  ,PBAR(15)   ,PRHO(15)
     J/VARIAT/ VT(15,15)
      COMMON
     6/UNIT/  ISYSRD,ISYSWR,ISYSPU
     8/TITLE/ TITLE(13),DATE(2),ISW(7),NBLOCK
     9/CONVER/ EPSI,APSI,VTEST,NSTEPQ,NFCN,NFCNMX
     A/CARD/ CWORD,CWORD2,CWORD3,WORD7(7)
     B/MINIMA/ AMIN,UP,NEWMIN,ITAUR,SIGMA
      DIMENSION PNEW(15)
      DO 10 I=1,NPAR
10    P(I,JH)=PNEW(I)
      Y(JH)=YNEW
      IF(YNEW.GE.AMIN) GO TO 18
      DO 15 I=1,NPAR
15    X(I)=PNEW(I)
      CALL INTOEX(X)
      AMIN=YNEW
      JL=JH
18    CONTINUE
      JH=1
      NPARP1=NPAR+1
20    DO 25 J=2,NPARP1
      IF (Y(J) .GT. Y(JH))  JH = J
25    CONTINUE
      SIGMA = Y(JH) - Y(JL)
      IF (SIGMA .LE. 0.D0)  GO TO 45
      US = 1.0D0/SIGMA
      DO 35 I= 1, NPAR
      PBIG = P(I,1)
      PLIT = PBIG
      DO 30 J= 2, NPARP1
      IF (P(I,J) .GT. PBIG)  PBIG = P(I,J)
      IF (P(I,J) .LT. PLIT)  PLIT = P(I,J)
   30 CONTINUE
      DIRIN(I) = PBIG - PLIT
      IF (ITAUR .LT. 1 )  V(I,I) = 0.5D0*(V(I,I) +US*DIRIN(I)**2)
   35 CONTINUE
   40 RETURN
   45 WRITE (ISYSWR, 1000)  NPAR
      GO TO 40
 1000 FORMAT (  59H0***** FUNCTION VALUE DOES NOT SEEM TO DEPEND ON ANY
     +OF THE ,I3,   20H VARIABLE PARAMETERS/15X   ,58HVERIFY THAT STEP S
     +IZES ARE BIG ENOUGH AND CHECK FCN LOGIC./1X ,81(1H*)/1X ,81(1H*)//
     +/)
      END
      SUBROUTINE RESTOR(K)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
CC        RESTORES A FIXED PARAMETER TO VARIABLE STATUS
CC        BY INSERTING IT INTO THE INTERNAL PARAMETER LIST AT THE
CC        APPROPRIATE PLACE.
CC
      COMMON
     1/MINERR/ ERP(30)     ,ERN(30)
     2/PARINT/ X(15)       ,XT(15)     ,DIRIN(15)  ,MAXINT     ,NPAR
     3/PAREXT/ U(30)       ,NAM(30)    ,WERR(30)   ,MAXEXT     ,NU
     4/LIMITS/ ALIM(30)    ,BLIM(30)   ,LCODE(30)  ,LCORSP(30) ,LIMSET
     5/VARIAN/ V(15,15)
     7 /FIX/    XS(15),   XTS(15),   WTS(15),   IPFIX(15),   NPFIX
     C/CASC/ JH, JL, Y(16)
     F/DERIVA/ G(30)       ,G2(30)
     G/SIMVEC/ P(15,16)    ,PSTAR(15)  ,PSTST(15)  ,PBAR(15)   ,PRHO(15)
     J/VARIAT/ VT(15,15)
      COMMON
     6/UNIT/  ISYSRD,ISYSWR,ISYSPU
     8/TITLE/ TITLE(13),DATE(2),ISW(7),NBLOCK
     9/CONVER/ EPSI,APSI,VTEST,NSTEPQ,NFCN,NFCNMX
     A/CARD/ CWORD,CWORD2,CWORD3,WORD7(7)
     B/MINIMA/ AMIN,UP,NEWMIN,ITAUR,SIGMA
C--       K = 0 MEANS RESTORE ALL PARAMETERS
C--       K = 1 MEANS RESTORE THE LAST PARAMETER FIXED
C--       K = -I MEANS RESTORE EXTERNAL PARAMETER I (IF POSSIBLE)
C--       IQ = FIX-LOCATION WHERE INTERNAL PARAMETERS WERE STORED
C--       IR = EXTERNAL NUMBER OF PARAMETER BEING RESTORED
C--       IS = INTERNAL NUMBER OF PARAMETER BEING RESTORED
      IF (K .GT. 1)  WRITE (ISYSWR,510)
      IF (NPFIX .LT. 1)  WRITE (ISYSWR,500)
      IF (K.EQ.1 .OR. K.EQ.0)  GO TO 40
C                   RELEASE PARAMETER WITH SPECIFIED EXTERNAL NUMBER
      KA = IABS(K)
      IF (LCORSP(KA) .EQ. 0)  GO TO 15
      WRITE (ISYSWR,540)
  540 FORMAT (49H0ERROR.  PARAMETER SPECIFIED IS ALREADY VARIABLE. /)
      RETURN
   15 IF (NPFIX .LT. 1)  GO TO 21
      DO 20 IK= 1, NPFIX
      IF (IPFIX(IK) .EQ. KA)  GO TO 24
   20 CONTINUE
   21 WRITE (ISYSWR,530)
  530 FORMAT (53H0ERROR.  PARAMETER SPECIFIED HAS NEVER BEEN VARIABLE./)
      RETURN
   24 IF (IK .EQ. NPFIX)  GO TO 40
C                   MOVE SPECIFIED PARAMETER TO END OF LIST
      IPSAV = IPFIX(IK)
      XSSAV = XS(IK)
      XTSSAV = XTS(IK)
      WTSSAV = WTS(IK)
      IKP1 = IK + 1
      DO 30 I= IKP1,NPFIX
      IPFIX(I-1) = IPFIX(I)
      XS(I-1) = XS(I)
      XTS(I-1) = XTS(I)
   30 WTS(I-1) = WTS(I)
      IPFIX(NPFIX) = IPSAV
      XS(NPFIX) = XSSAV
      XTS(NPFIX) = XTSSAV
      WTS(NPFIX) = WTSSAV
C         SET STEP SIZES TO ERRORS IF COVAR MATRIX WILL BE LOST
   40 IF (ITAUR .GE. 1 .OR. ISW(2) .LT. 1)  GO TO 50
      DO 45 I= 1, NPAR
   45 DIRIN(I) = SQRT(ABS(V(I,I))*UP)
C                   RESTORE LAST PARAMETER IN LIST  -- IPFIX(NPFIX)
   50 CONTINUE
      IF (NPFIX .LT. 1)  GO TO 300
      IR = IPFIX(NPFIX)
      IS = 0
      DO 100 IJ= IR, NU
      IK = NU + IR - IJ
      IF (LCORSP(IK))  100,100,85
   85 LC = LCORSP(IK) + 1
      IS = LC - 1
      LCORSP(IK) = LC
      X(LC) = X(LC-1)
      XT(LC) = XT(LC-1)
      DIRIN(LC) = DIRIN(LC-1)
  100 CONTINUE
      NPAR = NPAR + 1
      IF (IS .EQ. 0)   IS = NPAR
      LCORSP(IR) = IS
      IQ = NPFIX
      X(IS) = XS(IQ)
      XT(IS) = XTS(IQ)
      DIRIN(IS) = WTS(IQ)
      NPFIX = NPFIX - 1
      ISW(2) = 0
      IF (ITAUR .LT. 1)  WRITE(ISYSWR,520) IR,NAM(IR)
      IF (K.EQ.0)  GO TO 50
  300 RETURN
  500 FORMAT (  61H0ERROR IN CALL TO RESTOR.  THERE ARE NO MORE FIXED PA
     1RAMETERS/)
  510 FORMAT (  52H0ERROR IN CALL TO RESTOR.  ARGUMENT GREATER THAN ONE/
     1)
  520 FORMAT (20X,   9HPARAMETER,I4,2H, ,A10,  22H RESTORED TO VARIABLE.
     1)
      END
      SUBROUTINE SEEK
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
CC        PERFORMS A ROUGH MINIMIZATION BY MONTE CARLO SEARCH.
CC        EACH TIME A NEW MINIMUM IS FOUND, THE SEARCH AREA IS SHIFTED
CC        TO BE CENTERED AT THE BEST VALUE.   RANDOM POINTS ARE CHOSEN
CC        UNIFORMLY OVER A HYPERCUBE DETERMINED BY CURRENT STEP SIZES.
CC
      COMMON
     1/MINERR/ ERP(30)     ,ERN(30)
     2/PARINT/ X(15)       ,XT(15)     ,DIRIN(15)  ,MAXINT     ,NPAR
     3/PAREXT/ U(30)       ,NAM(30)    ,WERR(30)   ,MAXEXT     ,NU
     4/LIMITS/ ALIM(30)    ,BLIM(30)   ,LCODE(30)  ,LCORSP(30) ,LIMSET
     5/VARIAN/ V(15,15)
     7 /FIX/    XS(15),   XTS(15),   WTS(15),   IPFIX(15),   NPFIX
     C/CASC/ JH, JL, Y(16)
     F/DERIVA/ G(30)       ,G2(30)
     G/SIMVEC/ P(15,16)    ,PSTAR(15)  ,PSTST(15)  ,PBAR(15)   ,PRHO(15)
     J/VARIAT/ VT(15,15)
      COMMON
     6/UNIT/  ISYSRD,ISYSWR,ISYSPU
     8/TITLE/ TITLE(13),DATE(2),ISW(7),NBLOCK
     9/CONVER/ EPSI,APSI,VTEST,NSTEPQ,NFCN,NFCNMX
     A/CARD/ CWORD,CWORD2,CWORD3,WORD7(7)
     B/MINIMA/ AMIN,UP,NEWMIN,ITAUR,SIGMA
      DIMENSION AMID(15) , N(15)
      WRITE (ISYSWR,1000)
      NUMBER = WORD7(1) + 0.5
      IF (NUMBER .LE. 0)  NUMBER = 10 * NPAR
      IFLAG = 4
C--       INITIAL VALUES
      DO 100 J= 1, NU
      NI = LCORSP(J)
      IF (NI .LE. 0)  GO TO 100
      N(NI) = J
      AMID(NI) = U(J)
  100 CONTINUE
      NCYCL = 0
C               MONTE CARLO SEARCH OVER ENTIRE VARIABLE PARAMETER SPACE
      DO 650 INUM= 1, NUMBER
      DO 200 I2= 1, NPAR
      I3 = N(I2)
C                                        RANDOM POINTS IN UNIFORM DISTR.
  180 XPLS = 2.0D0 * (RNDM(-1) - 0.5D0)
      U(I3) = AMID(I2) + XPLS*WERR(I3)
      IF (LCODE(I3) .LE. 1)  GO TO 200
      IF (U(I3) .GT. BLIM(I3) .OR. U(I3) .LT. ALIM(I3))  GO TO 180
  200 CONTINUE
      CALL FCN(NPAR,G,F,U,IFLAG)
      NFCN = NFCN + 1
      IF (F .GE. AMIN)  GO TO 650
      AMIN = F
      DO 500 I= 1, NPAR
      J = N(I)
  500 AMID(I) = U(J)
      NCYCL = NCYCL + 1
      IF (ISW(5) .LT. 2)  GO TO 650
      CALL EXTOIN(X)
      IF (ISW(5).GE. 3 .OR. MOD(NCYCL,10).EQ.1)  CALL MPRINT(0,AMIN)
  650 CONTINUE
C                                  SEARCH FINISHED. SET U TO BEST VALUES
      DO 800 I= 1, NPAR
      NI = N(I)
  800 U(NI) = AMID(I)
      CALL EXTOIN(X)
      WRITE (ISYSWR,1005)
      CALL MPRINT(1,AMIN)
      RETURN
 1000 FORMAT (  35H SEEK -- MONTE CARLO MINIMUM SEARCH )
 1005 FORMAT (  28H0BEST VALUE FOUND IN SEEK IS )
      END
      SUBROUTINE SIMPLX
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
CC        PERFORMS A MINIMIZATION USING THE SIMPLEX METHOD OF NELDER
CC        AND MEAD (REF. -- COMP. J. 7,308 (1965)).
CC
      COMMON
     1/MINERR/ ERP(30)     ,ERN(30)
     2/PARINT/ X(15)       ,XT(15)     ,DIRIN(15)  ,MAXINT     ,NPAR
     3/PAREXT/ U(30)       ,NAM(30)    ,WERR(30)   ,MAXEXT     ,NU
     4/LIMITS/ ALIM(30)    ,BLIM(30)   ,LCODE(30)  ,LCORSP(30) ,LIMSET
     5/VARIAN/ V(15,15)
     7 /FIX/    XS(15),   XTS(15),   WTS(15),   IPFIX(15),   NPFIX
     C/CASC/ JH, JL, Y(16)
     F/DERIVA/ G(30)       ,G2(30)
     G/SIMVEC/ P(15,16)    ,PSTAR(15)  ,PSTST(15)  ,PBAR(15)   ,PRHO(15)
     J/VARIAT/ VT(15,15)
      COMMON
     6/UNIT/  ISYSRD,ISYSWR,ISYSPU
     8/TITLE/ TITLE(13),DATE(2),ISW(7),NBLOCK
     9/CONVER/ EPSI,APSI,VTEST,NSTEPQ,NFCN,NFCNMX
     A/CARD/ CWORD,CWORD2,CWORD3,WORD7(7)
     B/MINIMA/ AMIN,UP,NEWMIN,ITAUR,SIGMA
      DATA ALPHA,BETA,GAMMA,RHOMIN,RHOMAX / 1.0, 0.5, 2.0, 4.0, 8.0/
      IF (NPAR .LE. 0)  RETURN
      NPFN=NFCN
      NPARP1=NPAR+1
      RHO1 = 1.0D0 + ALPHA
      RHO2 = RHO1 + ALPHA*GAMMA
      WG = 1.0D0/FLOAT(NPAR)
      IFLAG=4
      WRITE(ISYSWR,100) EPSI
      DO 2 I= 1, NPAR
      IF (ISW(2) .GE. 1)  DIRIN(I) = SQRT(V(I,I)*UP)
      IF (ABS(DIRIN(I)) .LT. 1.0D-10*ABS(X(I))) DIRIN(I)=1.0D-8*X(I)
      IF(ITAUR.LT. 1)  V(I,I) =    DIRIN(I)**2/UP
    2 CONTINUE
      IF (ITAUR .LT. 1)  ISW(2) = 1
C**       CHOOSE THE INITIAL SIMPLEX USING SINGLE-PARAMETER SEARCHES
    1 CONTINUE
      YNPP1 = AMIN
      JL = NPARP1
      Y(NPARP1) = AMIN
      ABSMIN = AMIN
      DO 10 I= 1, NPAR
      AMING = AMIN
      PBAR(I) = X(I)
      BESTX = X(I)
      KG = 0
      NS = 0
      NF = 0
    4 X(I) = BESTX + DIRIN(I)
      CALL INTOEX(X)
      CALL FCN(NPAR,G, F, U, 4)
      NFCN = NFCN + 1
      IF (F .LE. AMING)  GO TO 6
C         FAILURE
      IF (KG .EQ. 1)  GO TO 8
      KG = -1
      NF = NF + 1
      DIRIN(I) = DIRIN(I) * (-0.4)
      IF (NF .LT. 3)  GO TO 4
      NS = 6
C         SUCCESS
    6 BESTX = X(I)
      DIRIN(I) = DIRIN(I) * 3.0
      AMING = F
      KG = 1
      NS = NS + 1
      IF (NS .LT. 6)  GO TO 4
C         LOCAL MINIMUM FOUND IN ITH DIRECTION
    8 Y(I) = AMING
      IF (AMING .LT. ABSMIN)  JL = I
      IF (AMING .LT. ABSMIN)  ABSMIN = AMING
      X(I) = BESTX
      DO 9 K= 1, NPAR
    9 P(K,I) = X(K)
   10 CONTINUE
      JH = NPARP1
      AMIN=Y(JL)
      CALL RAZZIA(YNPP1,PBAR)
      DO 20 I= 1, NPAR
   20 X(I) = P(I,JL)
      CALL INTOEX(X)
      IF (ISW(5) .GE. 1)  CALL MPRINT(0,AMIN)
      SIGMA = SIGMA * 10.D0
      SIG2 = SIGMA
      IGNAL = 0
      NCYCL=0
C                                        . . . . .  START MAIN LOOP
   50 CONTINUE
      IF (IGNAL .GE. 10)  GO TO 1
      IF (SIG2 .LT. EPSI .AND. SIGMA.LT.EPSI)     GO TO 76
      SIG2 = SIGMA
      IF ((NFCN-NPFN) .GT. NFCNMX)  GO TO 78
C         CALCULATE NEW POINT * BY REFLECTION
      DO 60 I= 1, NPAR
      PB = 0.D0
      DO 59 J= 1, NPARP1
   59 PB = PB + WG * P(I,J)
      PBAR(I) = PB - WG * P(I,JH)
   60 PSTAR(I)=(1.+ALPHA)*PBAR(I)-ALPHA*P(I,JH)
      CALL INTOEX(PSTAR)
      CALL FCN(NPAR,G,YSTAR,U,4)
      NFCN=NFCN+1
      IF(YSTAR.GE.AMIN) GO TO 70
C         POINT * BETTER THAN JL, CALCULATE NEW POINT **
      DO 61 I=1,NPAR
   61 PSTST(I)=GAMMA*PSTAR(I)+(1.D0-GAMMA)*PBAR(I)
      CALL INTOEX(PSTST)
      CALL FCN(NPAR,G,YSTST,U,4)
      NFCN=NFCN+1
C         TRY A PARABOLA THROUGH PH, PSTAR, PSTST.  MIN = PRHO
      Y1 = (YSTAR-Y(JH)) * RHO2
      Y2 = (YSTST-Y(JH)) * RHO1
      RHO = 0.5D0 * (RHO2*Y1 -RHO1*Y2) / (Y1 -Y2)
      IF (RHO .LT. RHOMIN)  GO TO 66
      IF (RHO .GT. RHOMAX)  RHO = RHOMAX
      DO 64 I= 1, NPAR
   64 PRHO(I) = RHO*PSTAR(I) + (1.D0 -RHO)*P(I,JH)
      CALL INTOEX(PRHO)
      CALL FCN(NPAR, G, YRHO, U, 4)
      NFCN = NFCN + 1
      IF (YRHO .LT. Y(JL) .AND. YRHO .LT. YSTST)  GO TO 65
      IF (YSTST .LT. Y(JL))  GO TO 67
      IF (YRHO .GT. Y(JL))  GO TO 66
C         ACCEPT MINIMUM POINT OF PARABOLA, PRHO
   65 CALL RAZZIA (YRHO,PRHO)
      IGNAL = MAX0(IGNAL-2, 0)
      GO TO 68
   66 IF (YSTST .LT. Y(JL))  GO TO 67
      IGNAL = MAX0(IGNAL-1, 0)
      CALL RAZZIA(YSTAR,PSTAR)
      GO TO 68
   67 IGNAL = MAX0(IGNAL-2, 0)
  675 CALL RAZZIA(YSTST,PSTST)
   68 NCYCL=NCYCL+1
      IF (ISW(5) .LT. 2)  GO TO 50
      IF (ISW(5) .GE. 3 .OR. MOD(NCYCL, 10) .EQ. 0) CALL MPRINT(0,AMIN)
      GO TO 50
C         POINT * IS NOT AS GOOD AS JL
   70 IF (YSTAR .GE. Y(JH))  GO TO 73
      JHOLD = JH
      CALL RAZZIA(YSTAR,PSTAR)
      IF (JHOLD .NE. JH)  GO TO 50
C         CALCULATE NEW POINT **
   73 DO 74 I=1,NPAR
   74 PSTST(I)=BETA*P(I,JH)+(1.D0-BETA)*PBAR(I)
      CALL INTOEX (PSTST)
      CALL FCN(NPAR,G,YSTST,U,4)
      NFCN=NFCN+1
      IF(YSTST.GT.Y(JH)) GO TO 1
C     POINT ** IS BETTER THAN JH
      IF (YSTST .LT. AMIN)  GO TO 675
      IGNAL = IGNAL + 1
      CALL RAZZIA(YSTST,PSTST)
      GO TO 50
C                                        . . . . . .  END MAIN LOOP
   76 WRITE(ISYSWR,120)
      GO TO 80
   78 WRITE(ISYSWR,130)
      ISW(1) = 1
   80 DO 82 I=1,NPAR
      PB = 0.D0
      DO 81 J=1,NPARP1
   81 PB = PB + WG * P(I,J)
   82 PBAR(I) = PB - WG * P(I,JH)
      CALL INTOEX(PBAR)
      CALL FCN(NPAR,G,YPBAR,U,IFLAG)
      NFCN=NFCN+1
      IF (YPBAR .LT. AMIN)  CALL RAZZIA(YPBAR,PBAR)
      CALL INTOEX(X)
      IF (NFCNMX+NPFN-NFCN .LT. 3*NPAR)  GO TO 90
      IF (SIGMA .GT. 2.0D0*EPSI)  GO TO 1
   90 CALL MPRINT(1-ITAUR, AMIN)
      RETURN
  100 FORMAT(      37H START SIMPLEX MINIMIZATION            ,8X   ,65HC
     +ONVERGENCE CRITERION -- ESTIMATED DISTANCE TO MINIMUM (EDM) .LT.,E
     +10.2 )
120   FORMAT(1H ,  34HSIMPLEX MINIMIZATION HAS CONVERGED)
130   FORMAT(1H ,  38HSIMPLEX TERMINATES WITHOUT CONVERGENCE)
      END
      SUBROUTINE STAND
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
CC        OPTIONAL USER-SUPPLIED SUBROUTINE IS CALLED WHENEVER THE
CC        COMMAND "STANDARD" APPEARS.
CC
      RETURN
      END
      SUBROUTINE VERMIN(A,L,M,N,IFAIL)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
CC        INVERTS A SYMMETRIC MATRIX.   MATRIX IS FIRST SCALED TO
CC        HAVE ALL ONES ON THE DIAGONAL (EQUIVALENT TO CHANGE OF UNITS)
CC        BUT NO PIVOTING IS DONE SINCE MATRIX IS POSITIVE-DEFINITE.
CC
      COMMON
     1/MINERR/ ERP(30)     ,ERN(30)
     2/PARINT/ X(15)       ,XT(15)     ,DIRIN(15)  ,MAXINT     ,NPAR
     3/PAREXT/ U(30)       ,NAM(30)    ,WERR(30)   ,MAXEXT     ,NU
     4/LIMITS/ ALIM(30)    ,BLIM(30)   ,LCODE(30)  ,LCORSP(30) ,LIMSET
     5/VARIAN/ V(15,15)
     7 /FIX/    XS(15),   XTS(15),   WTS(15),   IPFIX(15),   NPFIX
     C/CASC/ JH, JL, Y(16)
     F/DERIVA/ G(30)       ,G2(30)
     G/SIMVEC/ P(15,16)    ,PSTAR(15)  ,PSTST(15)  ,PBAR(15)   ,PRHO(15)
     J/VARIAT/ VT(15,15)
      COMMON
     6/UNIT/  ISYSRD,ISYSWR,ISYSPU
     8/TITLE/ TITLE(13),DATE(2),ISW(7),NBLOCK
     9/CONVER/ EPSI,APSI,VTEST,NSTEPQ,NFCN,NFCNMX
     A/CARD/ CWORD,CWORD2,CWORD3,WORD7(7)
     B/MINIMA/ AMIN,UP,NEWMIN,ITAUR,SIGMA
      DIMENSION A(L,M) , PP(15) , Q(15) , S(15)
      IFAIL=0
      IF (N .LT. 1)  GO TO 100
      IF (N .GT. MAXINT)  GO TO 100
C                   SCALE MATRIX BY SQRT OF DIAG ELEMENTS
      DO 8  I=1,N
      SI = A(I,I)
      IF (SI) 100,100,8
    8 S(I) = 1.D0/SQRT(SI)
      DO 20 I= 1, N
      DO 20 J= 1, N
   20 A(I,J) = A(I,J) *S(I)*S(J)
C                                        . . . START MAIN LOOP . . . .
      DO 65 I=1,N
      K = I
C                   PREPARATION FOR ELIMINATION STEP1
      Q(K)=1.D0/A(K,K)
      PP(K) = 1.0D0
      A(K,K)=0.0D0
      KP1=K+1
      KM1=K-1
      IF(KM1)100,50,40
   40 DO 49 J=1,KM1
      PP(J)=A(J,K)
      Q(J)=A(J,K)*Q(K)
   49 A(J,K)=0.D0
   50 IF(K-N)51,60,100
   51 DO 59 J=KP1,N
      PP(J)=A(K,J)
      Q(J)=-A(K,J)*Q(K)
   59 A(K,J)=0.0D0
C                   ELIMINATION PROPER
   60 DO 65 J=1,N
      DO 65 K=J,N
   65 A(J,K)=A(J,K)+PP(J)*Q(K)
C                   ELEMENTS OF LEFT DIAGONAL AND UNSCALING
      DO 70 J= 1, N
      DO 70 K= 1, J
      A(K,J) = A(K,J) *S(K)*S(J)
   70 A(J,K) = A(K,J)
      RETURN
C                   FAILURE RETURN
  100 IFAIL=1
      RETURN
      END
      DOUBLE PRECISION FUNCTION RNDM(DUMMY)
      INTEGER DUMMY
      RNDM=0.D0
      WRITE(*,*) 'WARNING!! ATTEMPT TO USE MONTE-CARLO METHOD!!!!'
      RETURN
      END
      SUBROUTINE DATIME (ID,IT)
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C CERN PROGLIB# Z007    DATIME  DUMMY   .VERSION KERNFOR  4.03  821008
C
C-    DUMMY FOR NON-ESSENTIAL ROUTINE STILL MISSING ON YOUR MACHINE

      ID = 790929
      IT = 1200
      RETURN
      END
      SUBROUTINE TIMED (T)
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C CERN PROGLIB# Z007    TIMED   DUMMY   .VERSION KERNFOR  4.05  821202
C
C-    DUMMY FOR NON-ESSENTIAL ROUTINE STILL MISSING ON YOUR MACHINE

      T = .99D0
      RETURN
      END
      SUBROUTINE TIMEL (T)
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C CERN PROGLIB# Z007    TIMEL   DUMMY   .VERSION KERNFOR  4.11  850529
C
C-    DUMMY FOR NON-ESSENTIAL ROUTINE STILL MISSING ON YOUR MACHINE

      T = 9999.
      RETURN
      END
      SUBROUTINE TIMEST(DUMMY)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DUMMY=0.D0
C
C CERN PROGLIB# Z007    TIMEST          .VERSION KERNFOR  4.10  850320
C ORIG. 01/03/85  HRR, DUMMY VERSION FOR NON-INTERACTIVE SYSTEMS.
C
      RETURN
      END
      SUBROUTINE TIMEX (T)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
C CERN PROGLIB# Z007    TIMEX   DUMMY   .VERSION KERNFOR  4.05  821202
C
C-    DUMMY FOR NON-ESSENTIAL ROUTINE STILL MISSING ON YOUR MACHINE

      T = 9.D0
      RETURN
      END
      LOGICAL FUNCTION INTRAC(DUMMY)
      LOGICAL DUMMY
C CERN PROGLIB# Z044    INTRAC          .VERSION KERNFOR  4.10  850320
C ORIG. 20/02/83  HRR, DUMMY VERSION
C
      INTRAC = .FALSE.
      RETURN
      END
      SUBROUTINE CONPRT(F,IDM1,IDM2,M,N,NC,FMIN,FMAX)
C         THIS IS ONLY A DRIVING ROUTINE FOR CONT
C         TO MAKE THE CALLING SEQUENCE THE SAME AS THE OLD CONPRT
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      EXTERNAL FREARG
      DIMENSION F(IDM1,IDM2)
      DIMENSION CONTUR(10)
      COMMON G(121,121)
      IF(NC.GT.10) GO TO 4
      GO TO 7
    4 WRITE(*, 100)
  100 FORMAT(1H ,36HSORRY - ONLY 10 CONTOURS MAY BE USED)
      RETURN
    7 IF(IDM1.GT.121.OR.IDM2.GT.121) GO TO 8
      GO TO 5
    8 WRITE(*, 200)
  200 FORMAT(1H ,49HINTERNAL RESTRICTIONS LIMIT DIMENSIONS TO 121,121)
      RETURN
    5 XBLCOR = 1.D0
      YBLCOR = 1.D0
      XURCOR=M
      YURCOR=N
      A=XBLCOR
      B=XURCOR
      C=YBLCOR
      D=YURCOR
      IA=1
      IB=M
      IC=1
      ID=N
      DO 6 I=1,M
      DO 6 J=1,N
    6 G(I,J)=F(I,J)
      CALL SETUP(A,IA,B,IB,C,IC,D,ID)
      CALL FRAME(XBLCOR,YBLCOR,XURCOR,YURCOR)
      IF(FMIN.EQ.FMAX.AND.FMAX.EQ.0.) GO TO 1
      RANGE=FMAX-FMIN
      STEP=RANGE/(NC-1)
      CINT=FMIN-STEP
      DO 2 I=1,NC
      CONTUR(I)=CINT+STEP
      CINT=CONTUR(I)
    2 CONTINUE
      GO TO 3
    1 CALL FINDEM(FREARG,NC,CONTUR)
    3 CALL CONT(FREARG,NC,CONTUR)
      RETURN
      END
      SUBROUTINE ORDRE2(A,B,N)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C              IT ORDERS N PAIRS OF NUMBERS (X(I),Y(I))  IN ASCENDING
C              ORDER OF X(I)
C
      DIMENSION A(10), B(10)
      IF  (N .LE. 1)   RETURN
      NM1 = N-1
      DO  200  IV= 1, NM1
      IQUIT = 0
      NH = N - IV
      DO  100  IH = 1, NH
      IF  (A(IH) - A(IH+1))  100, 100, 50
   50 SAV = A(IH)
      A(IH) = A(IH+1)
      A(IH+1) = SAV
      SAV = B(IH)
      B(IH) = B(IH+1)
      B(IH+1) = SAV
      IQUIT = 1
  100 CONTINUE
      IF  (IQUIT)  250, 250, 200
  200 CONTINUE
  250 CONTINUE
      RETURN
      END
      SUBROUTINE J509BD
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C         SETS DEFAULT VALUES FOR PACKAGE J509, BY COPYING THEM FROM
C         A DATA AREA TO COMMON BLOCKS.   USER MAY OVERRIDE THESE VALUES
C         BY CALLING THE APPROPRIATE SUBROUTINES (NAMES,PAPER,SETUP)
      COMMON /J509C1/XBL,YBL,XUR,YUR,NX(6),NY(6),LETT1,LETT2,LINE1,LINE2
      COMMON /J509C2/CX1,CI1,CX2,CI2,CY1,CJ1,CY2,CJ2
      DIMENSION NAMEXY(12)
      DATA NAMEXY/12*' '/
      DATA KLETT1,KLETT2,KLINE1,KLINE2/ 12,111,2,51/
      DATA INIT/0/
      IF (INIT .GT. 0)  RETURN
      INIT = 1
      LETT1 = KLETT1
      LETT2 = KLETT2
      LINE1 = KLINE1
      LINE2 = KLINE2
      CALL UCOPY(NAMEXY,NX,12)
      RETURN
      END
      DOUBLE PRECISION FUNCTION FINARG(I,J)
      COMMON G(121,121)
      FINARG=G(I,J)
      RETURN
      END
      SUBROUTINE FRAME(XBLCOR,YBLCOR,XURCOR,YURCOR)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C   PURPOSE                                                            C
C     TO SET UP THE PLOT FRAME FOR THE CONTOUR PLOTTING PROGRAM CONT.  C
C   USAGE                                                              C
C     CALL FRAME(XBLCOR,YBLCOR,XURCOR,YURCOR)                          C
C     THIS STATEMENT SHOULD BE EXECUTED BEFORE CONT IS CALLED.         C
C   PARAMETERS                                                         C
C     XBLCOR - THE X-COORDINATE OF THE BOTTOM LEFT CORNER OF THE       C
C              PLOT FRAME                                              C
C     YBLCOR - THE Y-COORDINATE OF THE BOTTOM LEFT CORNER OF THE       C
C              PLOT FRAME                                              C
C     XURCOR - THE X-COORDINATE OF THE UPPER RIGHT CORNER OF THE       C
C              PLOT FRAME                                              C
C     YURCOR - THE Y-COORDINATE OF THE UPPER RIGHT CORNER OF THE       C
C              PLOT FRAME                                              C
C
      COMMON /J509C1/XBL,YBL,XUR,YUR,NX(6),NY(6),LETT1,LETT2,LINE1,LINE2
      CALL J509BD
C
      XBL = XBLCOR
      YBL=YBLCOR
      XUR=XURCOR
      YUR=YURCOR
      IF(XUR.LE.XBL.OR.YUR.LE.YBL) GOTO 1
      RETURN
    1 WRITE(*, 100)XBL,YBL,XUR,YUR
  100 FORMAT(1H ,28HERROR IN FRAME - EXIT CALLED/10H XBLCOR = ,F8.3,5X
     +  ,9HYBLCOR = ,F8.3,5X,9HXURCOR = ,F8.3,5X,9HYURCOR = ,F8.3)
      STOP
      END
      SUBROUTINE NAMES(NXARG,NYARG)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C   PURPOSE                                                            C
C     TO DEFINE WHICH LABELS SHALL BE PRINTED AT THE AXES BY           C
C     SUBSEQUENT CALLS TO THE SUBROUTINE CONT.                         C
C   USAGE                                                              C
C     IF YOU FOR EXAMPLE WANT THE WORD KSI TO BE PRINTED AT THE        C
C     HORIZONTAL AXIS AND THE WORD ETA TO BE PRINTED AT THE VERTICAL   C
C     AXIS, EXECUTE THE STATEMENT                                      C
C     CALL NAMES(NXARG,NYARG)                                          C
C     BEFORE THE CALL TO CONT.WHERE -                                  C
C     DATA NXARG,NYARG/6HKSI   ,6HETA   /
C   PARAMETERS                                                         C
C     NXARG  -  THE NAME TO BE PRINTED AT THE HORIZONTAL AXIS.         C
C     NYARG  -  THE NAME TO BE PRINTED AT THE VERTICAL AXIS.           C
C   REMARKS                                                            C
C     THE DEFAULT OPTION OF BLANK NAMES IS AUTOMATICALLY PROVIDED.     C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      COMMON /J509C1/XBL,YBL,XUR,YUR,NX(6),NY(6),LETT1,LETT2,LINE1,LINE2
C
      CALL J509BD
C      CALL UBLOW(NXARG,NX,6)
C      CALL UBLOW(NYARG,NY,6)
      RETURN
      END
      SUBROUTINE PAPER(IMAGEW,IMAGEH)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C   PURPOSE                                                            C
C     TO DEFINE HOW LARGE PICTURES SHALL BE PRODUCED BY SUBSEQUENT     C
C     CALLS TO THE SUBROUTINE CONT.                                    C
C   USAGE                                                              C
C     CALL PAPER(IMAGEW,IMAGEH)                                        C
C   PARAMETERS                                                         C
C     IMAGEW - THE IMAGE WIDTH IN NUMBER OF LETTERS ON A LINE          C
C     IMAGEH - THE IMAGE HEIGT IN NUMBER OF LINES                      C
C   REMARKS                                                            C
C     IMAGEW AND IMAGEH SHOULD NOT EXEED CERTAIN MACHINE-DEPENDANT     C
C     LIMITS,  USUALLY 120 AND 62, RESPECTIVELY.
C
      COMMON /J509C1/XBL,YBL,XUR,YUR,NX(6),NY(6),LETT1,LETT2,LINE1,LINE2
C
      CALL J509BD
      LETT2 = IMAGEW - 1
      LINE2 = IMAGEH - 3
      IF (LETT2 .GT. 119)  LETT2 = 119
      RETURN
      END
      SUBROUTINE SETUP(X1,I1,X2,I2,Y1,J1,Y2,J2)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C   PURPOSE                                                            C
C     TO SET UP THE MAPPING CONSTANTS BETWEEN TWO LINEARLY DEPENDANT   C
C     COORDINATE SYSTEMS. SETUP IS PLANNED TO BE USED IN CONJUNCTION   C
C     WITH THE FUNCTION FREARG.                                        C
C   USAGE                                                              C
C     CALL SETUP(X1,I1,X2,I2,Y1,J1,Y2,J2)                              C
C     THIS STATEMENT SHOULD BE EXECUTED BEFORE FREARG IS CALLED.       C
C   PARAMETERS                                                         C
C     WE HAVE TWO DIFFERENT COORDINATE SYSTEMS, THE (X,Y)-SYSTEM AND   C
C     THE (I,J)-SYSTEM.                                                C
C     X AND I ARE LINEARLY RELATED TO EACH OTHER.                      C
C     Y AND J ARE LINEARLY RELATED TO EACH OTHER.                      C
C     THE MAPPING CONSTANTS ARE DEFINED BY REQUIRING THAT              C
C     X=X1 CORRESPONDS TO I=I1,                                        C
C     X=X2 CORRESPONDS TO I=I2,                                        C
C     Y=Y1 CORRESPONDS TO J=J1,                                        C
C     Y=Y2 CORRESPONDS TO J=J2.                                        C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      COMMON /J509C2/CX1,CI1,CX2,CI2,CY1,CJ1,CY2,CJ2
C=======================================================================
      CX1=X1
      CI1=I1
      CX2=X2
      CI2=I2
      CY1=Y1
      CJ1=J1
      CY2=Y2
      CJ2=J2
      RETURN
      END
      SUBROUTINE FINDEM(F,NUMBCS,CONTUR)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C   PURPOSE                                                            C
C     TO FIND REASONABLE CONTOUR VALUES FOR A USER WHO HAS NOT         C
C     ALREADY MADE UP HIS MIND. (AUXILIARY TO CONT.)                   C
C   USAGE                                                              C
C     CALL FINDEM(F,NUMBCS,CONTUR)                                     C
C   PARAMETERS                                                         C
C     F      - THE FUNCTION TO BE PLOTTED BY CONT                      C
C     NUMBCS - THE DESIRED NUMBER OF CONTOURS                          C
C     CONTUR - AN ARRAY INTO WHICH THE CONTOUR VALUES WILL BE RETURNED.C
C     THE CHOSEN NAME FOR F MUST APPEAR IN AN EXTERNAL STATEMENT IN    C
C     THE PROGRAM CALLING FINDEM.                                      C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      EXTERNAL F
      DIMENSION CONTUR(10)
      COMMON /J509C1/XBL,YBL,XUR,YUR,NX(6),NY(6),LETT1,LETT2,LINE1,LINE2
C=======================================================================
      IF(1.LE.NUMBCS .AND. NUMBCS.LE.10)GO TO 10
      WRITE(*,1010) NUMBCS
      RETURN
   10 CONTINUE
      CALL J509BD
      FMIN = F(XBL,YBL)
      FMAX=FMIN
      XVAL = XBL
      DXVAL = 2.*(XUR-XBL)/FLOAT(LETT2-LETT1)
      YVAL = YBL
      DYVAL = 2.*(YUR-YBL)/FLOAT(LINE2-LINE1)
      DO 30 LETT= LETT1,LETT2,2
      XVAL = XVAL + DXVAL
      YVAL = YBL
      DO 20 LINE= LINE1,LINE2,2
      YVAL = YVAL + DYVAL
      FNOW = F(XVAL,YVAL)
      IF(FNOW .LT. FMIN)FMIN=FNOW
      IF(FNOW .GT. FMAX)FMAX=FNOW
   20 CONTINUE
   30 CONTINUE
      SPAN=FMAX-FMIN
      CFIRST=FMIN+0.05*SPAN
      CLAST=FMAX-0.05*SPAN
      STEP=(CLAST-CFIRST)/FLOAT(NUMBCS-1)
      DO 40 NUMBC=1,NUMBCS
   40 CONTUR(NUMBC)=CFIRST+FLOAT(NUMBC-1)*STEP
      RETURN
 1010 FORMAT(1H ,33HHOW MANY CONTOURS DID YOU WANT---,I10,11H---(FINDEM)
     +)
      END
      SUBROUTINE CONT(F,NUMBCS,CONTUR)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C   PURPOSE                                                            C
C     TO PRODUCE A CONTOUR PLOT BY MEANS OF THE PRINTER                C
C   USAGE                                                              C
C     THIS DEPENDS ON WHETHER THE FUNCTION TO BE PLOTTED HAS REAL      C
C     ARGUMENTS OR INTEGER ARGUMENTS.                                  C
C     THE FUNCTION HAS REAL ARGUMENTS, SUPPOSE THE FUNCTION HAS        C
C     THE NAME Z.                                                      C
C     EXTERNAL Z                                                       C
C     DIMENSION CONTUR(10)                                             C
C     CALL PAPER....                                                   C
C     CALL NAMES....                                                   C
C     CALL FRAME....                                                   C
C     CONTUR(1)=....                                                   C
C     CONTUR(2)=....                                                   C
C     .                                                                C
C     .                                                                C
C     .                                                                C
C     CALL CONT(Z,NUMBCS,CONTUR)                                       C
C     IF YOU DO NOT KNOW WHAT SORT OF VALUES TO ASSIGN TO THE ARRAY    C
C     CONTUR, YOU CAN CALL THE SUBROUTINE FINDEM WHICH WILL HELP YOU.  C
C     CALL FINDEM(Z,NUMBCS,CONTUR)                                     C
C                                                                      C
C     F HAS INTEGER ARGUMENTS---                                       C
C     EXTERNAL FREARG                                                  C
C     DIMENSION CONTUR(10)                                             C
C     CALL PAPER....                                                   C
C     CALL NAMES....                                                   C
C     CALL FRAME....                                                   C
C     CONTUR(1)=....                                                   C
C     CONTUR(2)=....                                                   C
C     .                                                                C
C     .                                                                C
C     .                                                                C
C     CALL SETUP....                                                   C
C     CALL CONT(FREARG,NUMBCS,CONTUR)                                  C
C     AGAIN, YOU MAY USE FINDEM TO ASSIGN VALUES TO THE ARRAY CONTUR.  C
C     CALL FINDEM(FREARG,NUMBCS,CONTUR)                                C
C     NOTE THAT THE FIRST PARAMETER OF CONT AND FINDEM MUST HAVE       C
C     THE NAME FREARG.                                                 C
C     THE FUNCTION TO BE PLOTTED MUST HAVE THE NAME FINARG.            C
C   PARAMETERS                                                         C
C     F      - THE FUNCTION TO BE PLOTTED. F MUST BE A REAL FUNCTION   C
C              WITH TWO REAL PARAMETERS. IF THE FUNCTION YOU WANT TO   C
C              PLOT HAS INTEGER ARGUMENTS, THIS FUNCTION SHOULD BE     C
C              NAMED FINARG AND THE FIRST ACTUAL PARAMETER IN THE      C
C              CALL TO CONT SHOULD BE FREARG.                          C
C              (FREARG IS A FUNCTION WHICH CALLS FINARG FOUR TIMES     C
C              AND PERFORMS A TWO-WAY LINEAR INTERPOLATION ON THESE    C
C              FOUR VALUES.)                                           C
C     NUMBCS - THE NUMBER OF CONTOURS TO BE PLOTTED. NUMBS MUST BE     C
C              AT LEAST 1 AND AT MOST 10.                              C
C     CONTUR - AN ARRAY CONTAINING THE FUNCTION VALUES ON THE VARIOUS  C
C              CONTOURS. THESE FUNCTION VALUES DO NOT HAVE TO BE       C
C              EQUIDISTANT AND NOT EVEN MONOTONOUS.                    C
C              THE NUMBER 0 IS PRINTED WHERE F=CONTUR(1),              C
C              THE NUMBER 1 IS PRINTED WHERE F=CONTUR(2),              C
C              ETC.                                                    C
C   REMARKS                                                            C
C     THE CHOSEN NAME FOR F MUST APPEAR IN AN EXTERNAL STATEMENT IN    C
C     THE PROGRAM CALLING CONT.                                        C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      EXTERNAL F
      DIMENSION CONTUR(10),SAVEC(10),SAVES(10)
      DIMENSION XVALUS(12)
      COMMON /J509C1/XBL,YBL,XUR,YUR,NX(6),NY(6),LETT1,LETT2,LINE1,LINE2
      DIMENSION  FU(133),FB(133),SYMBOL1(10)
      INTEGER LETTRI,MINUS,STAR,BLANK,SYMBOL(10),LINEIM(132),SAVES
      DATA LETTRI,MINUS,STAR,BLANK/'I','-','*',' '/
      DATA SYMBOL(1),SYMBOL(2),SYMBOL(3),SYMBOL(4)/'0','1','2','3'/
      DATA SYMBOL(5),SYMBOL(6),SYMBOL(7),SYMBOL(8)/'4','5','6','7'/
      DATA SYMBOL(9),SYMBOL(10)/'8','9'/
      DATA LSLASH,LDOT/'/' , '.' /
C=======================================================================
      IF(1.LE.NUMBCS .AND. NUMBCS.LE.10)GO TO 10
      WRITE(*, 1010)NUMBCS
      RETURN
   10 CONTINUE
C
C         INITIALIZE COMMON BLOCK IF NOT ALREADY DONE
      CALL J509BD
      LETT0 = LETT1 - 1
      LINE0 = LINE1 - 1
      LETT3 = LETT2 + 1
      LINE3 = LINE2 + 1
C         SAVE CONTOUR VALUES AND ORDER THEM ASCENDING
      CALL UCOPY1(CONTUR,SAVEC,NUMBCS)
      CALL UCOPY(SYMBOL,SAVES,NUMBCS)
      DO IOR=1,10
      SYMBOL1(IOR)=FLOAT(SYMBOL(IOR))
      END DO
      CALL ORDRE2(CONTUR,SYMBOL1,NUMBCS)
      DO IOR=1,10
      SYMBOL(IOR)=INT(SYMBOL1(IOR))
      END DO
C
C   THE ARRAY LINEIM IS A BUFFER FOR A LINE IMAGE.                     C
C         PRINT LINE ALONG TOP OF FRAME
      WRITE(*, 1030)NY
      LINEIM(LETT0)=STAR
      DO 30 LETT=LETT1,LETT2
   30 LINEIM(LETT)=MINUS
      LINEIM(LETT3)=STAR
      WRITE(*, 1060)YUR,(LINEIM(LETT),LETT=LETT0,LETT3)
      MIDDLE=(LINE1+LINE2)/2
      DLINE = FLOAT(LINE2-LINE1+1)
      DLETT = FLOAT(LETT2-LETT1+1)
      DXVAL = (XUR-XBL) / DLETT
      DYVAL = (YUR-YBL) / DLINE
      YVAL = YUR
      XVAL = XBL
      DO 40 LETT=LETT1,LETT3
      FU(LETT) = F(XVAL,YVAL)
   40 XVAL = XVAL + DXVAL
CCC
      MAXCON = 1
      MINCON = 10
      YVAL = YUR
CCC       LOOP OVER LINES STARTS HERE
C
      DO 90 LINE=LINE1,LINE2
      YVAL = YVAL - DYVAL
      XVAL = XBL-DXVAL
      DO 50 LETT=LETT1,LETT3
      XVAL = XVAL + DXVAL
   50 FB(LETT) = F(XVAL,YVAL)
      DO 70 LETT=LETT1,LETT2
      FUL=FU(LETT)
      FUR=FU(LETT+1)
      FBL=FB(LETT)
      FBR=FB(LETT+1)
C   FUL IS THE FUNCTION VALUE AT THE POINT (LETT-1/2,LINE-1/2)         C
C   FUR IS THE FUNCTION VALUE AT THE POINT (LETT+1/2,LINE-1/2)         C
C   FBL IS THE FUNCTION VALUE AT THE POINT (LETT-1/2,LINE+1/2)         C
C   FBR IS THE FUNCTION VALUE AT THE POINT (LETT+1/2,LINE+1/2)         C
C                                                                      C
C   FIND OUT IF THERE IS A CONTOUR VALUE WHICH FALLS BETWEEN THE       C
C   BIGGEST AND THE SMALLEST OF THE FUNCTION VALUES AT THE FOUR        C
C   CORNERS OF THE PRESENT PRINT POSITION (LETT,LINE).                 C
C   IF SO, PRINT THE CORRESPONDING SYMBOL.                             C
C   IF NOT, PRINT A BLANK AT THE POINT (LETT,LINE).                    C
      BIG  =AMAX1(FUL,FUR,FBL,FBR)
      SMALL=AMIN1(FUL,FUR,FBL,FBR)
      LINEIM(LETT)=BLANK
      DO 60 NUMBC=1,NUMBCS
      IF (BIG   .LT. CONTUR(NUMBC))  GO TO 70
      IF (SMALL .GT. CONTUR(NUMBC))  GO TO 60
      LINEIM(LETT) = SYMBOL(NUMBC)
      IF (NUMBC .GT. MAXCON)  MAXCON = NUMBC
      IF (NUMBC .LT. MINCON)  MINCON = NUMBC
   60 CONTINUE
   70 CONTINUE
      IF (MOD(LINE,10) .EQ. LINE0)  GO TO 73
C         PRINT LINE (NORMAL LINE)
      LINEIM(LETT0) = LETTRI
      LINEIM(LETT3) = LETTRI
      WRITE(*, 1050)      (LINEIM(LETT),LETT=LETT0,LETT3)
      GO TO 76
C         PRINT LINE (EVEN TENTH LINE)
   73 LINEIM(LETT0) = LDOT
      LINEIM(LETT3) = LDOT
      WRITE(*, 1040) YVAL,(LINEIM(LETT),LETT=LETT0,LETT3)
   76 CONTINUE
      DO 80 LETT=LETT1,LETT3
   80 FU(LETT)=FB(LETT)
   90 CONTINUE
C         PRINT LINE ALONG BOTTOM OF FRAME
      LINEIM(LETT0)=STAR
      DO 100 LETT=LETT1,LETT2
  100 LINEIM(LETT)=MINUS
      LINEIM(LETT3)=STAR
      WRITE(*, 1060)YBL,(LINEIM(LETT),LETT=LETT0,LETT3)
C         PRINT LABELS ON X-AXIS EVERY 10 COLIMNS
      LETT2P = LETT2 + 10
      DO 119 LETT= 2, LETT2P
  119 LINEIM(LETT) = BLANK
      X10COL = 10.*DXVAL
      ITENMX = 11
      LETT = LETT0
      DO 129 ITEN= 1, ITENMX
      XVALUS(ITEN) = XBL + X10COL*FLOAT(ITEN-1)
      LINEIM(LETT) = LSLASH
      LETT = LETT + 10
      IF (XVALUS(ITEN) .GT. (XUR-5.*DXVAL)) GO TO 139
  129 CONTINUE
      ITEN = ITENMX
  139 CONTINUE
      WRITE(*, 1090 ) (LINEIM(LETT),LETT=2,LETT2P)
      WRITE(*, 1100)(XVALUS(II),II=1,ITEN)
C         PRINT VARIABLE NAME FOR X-AXIS
      WRITE(*, 1110)NX,DXVAL
      IF (MAXCON .LT. MINCON)  GO TO 125
      WRITE(*, 1120) (SYMBOL(NN),CONTUR(NN),NN=MINCON,MAXCON)
      GO TO 135
  125 CONTINUE
      WRITE(*,*) 1130
  135 CONTINUE
C         RESTORE INITIAL CONTOUR ORDERING
      CALL UCOPY(SAVES,SYMBOL,NUMBCS)
      CALL UCOPY1(SAVEC,CONTUR,NUMBCS)
      RETURN
 1010 FORMAT(1H ,33HHOW MANY CONTOURS DID YOU WANT---,I10,9H---(CONT))
 1030 FORMAT (1H1,120A1)
 1040 FORMAT (1X,F8.3,1X,122A1)
 1050 FORMAT(1H ,9X,122A1)
 1060 FORMAT(1H ,F8.3,1H-,122A1)
 1090 FORMAT(1H ,131A1)
 1100 FORMAT ( 4X,12(1X,F9.3))
 1110 FORMAT (20X,6A1,20X,12HONE COLUMN =,E10.3,10X,
     *    2(22HCONTOUR FCN VALUE         ))
 1120 FORMAT (80X,A1,F14.5,7X,A1,F14.5)
 1130 FORMAT (80X,20HNO CONTOURS FOUND          /)
      END
      DOUBLE PRECISION FUNCTION FREARG(X,Y)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C   PURPOSE                                                            C
C     TO PERFORM A LINEAR INTERPOLATION ON A REAL FUNCTION OF TWO      C
C     INTEGER ARGUMENTS. THIS FUNCTION MUST HAVE THE NAME FINARG.      C
C     FREARG IS PLANNED FOR USE WITH THE CONTOUR PROGRAM CONT.         C
C     LET US DENOTE THE ARGUMENTS OF FINARG BY I AND J.                C
C     X AND I SHALL BE LINEARLY RELATED TO EACH OTHER.                 C
C     Y AND J SHALL BE LINEARLY RELATED TO EACH OTHER.                 C
C     THESE RELATIONSHIPS ARE COMPLETELY DEFINED BY REQUIRING THAT     C
C         X=X1  CORRESPONDS TO  I=I1,                                  C
C         X=X2  CORRESPONDS TO  I=I2,                                  C
C         Y=Y1  CORRESPONDS TO  J=J1,                                  C
C         Y=Y2  CORRESPONDS TO  J=J2.                                  C
C   USAGE                                                              C
C     AFTER THE STATEMENT                                              C
C     CALL SETUP(X1,I1,X2,I2,Y1,J1,Y2,J2)                              C
C     HAS BEEN EXECUTED, THE EXPRESSION                                C
C                  FREARG(X,Y)                                         C
C     WILL HAVE THE VALUE FOUND BY LINEAR INTERPOLATION FROM THE FOUR  C
C     NEAREST VALUES OF THE CORRESPONDING FUNCTION FINARG(I,J).        C
C   PARAMETERS                                                         C
C     X  -LINEARLY RELATED TO I,                                       C
C     Y  -LINEARLY RELATED TO J.                                       C
C   EXTERNAL SUBPROGRAMS USED                                          C
C     FINARG                                                           C
C     INTER                                                            C
C   REMARKS                                                            C
C     FINARG  IS TO BE WRITTEN BY THE USER.                            C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      COMMON /J509C2/CX1,CI1,CX2,CI2,CY1,CJ1,CY2,CJ2
C=======================================================================
C         STATEMENT FUNCTION YINTER DOES A LINEAR INTERPOLATION
      YINTER(X1,Y1,X2,Y2,XIN)=((X2-XIN)*Y1+(XIN-X1)*Y2)/(X2-X1)
C
      REALI = YINTER(CX1,CI1,CX2,CI2,X)
      REALJ = YINTER(CY1,CJ1,CY2,CJ2,Y)
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C   FIND NEAREST INTEGER LEFT -HAND NEIGHBOUR OF REALI, CALL IT IL,    C
C   FIND NEAREST INTEGER RIGHT-HAND NEIGHBOUR OF REALI, CALL IT IR,    C
C   FIND NEAREST INTEGER LEFT -HAND NEIGHBOUR OF REALJ, CALL IT JL,    C
C   FIND NEAREST INTEGER RIGHT-HAND NEIGHBOUR OF REALJ, CALL IT JR.    C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      IL=REALI
      JL=REALJ
C         MAKE SURE THE TABLE VALUES EXIST
      IF (REALI .LT. 1.0)  IL=1
      IF (REALJ .LT. 1.0)  JL=1
      IF (REALI .GE. CI2)  IL= CI2-1.0
      IF (REALJ .GE. CJ2)  JL= CJ2-1.0
      IR=IL+1
      JR=JL+1
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C     CONVERT THEM ALL TO REAL NUMBERS,AS ITER WANTS REAL ARGUMENTS.   C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      REALIL=IL
      REALIR=IR
      REALJL=JL
      REALJR=JR
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C   FIND THE FOUR NEAREST FUNCTION VALUES OF FINARG AROUND             C
C     FINARG(REALI,RELAJ), WHICH IS NOT DEFINED.                       C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      FLL=FINARG(IL,JL)
      FLR=FINARG(IL,JR)
      FRL=FINARG(IR,JL)
      FRR=FINARG(IR,JR)
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C   INTERPOLATED BETWEEN IL AND IR, WITH J=JL.                         C
      F0L = YINTER(REALIL,FLL,REALIR,FRL,REALI)
C
C   INTERPOLATE BETWEEN IL AND IR, WITH J=JR.                          C
      F0R = YINTER(REALIL,FLR,REALIR,FRR,REALI)
C
C   FINALLY, INTERPOLATE BETWEEN JL AND JR, WITH I=REALI               C
      F00 = YINTER(REALJL,F0L,REALJR,F0R,REALJ)
C
      FREARG=F00
      RETURN
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C   IT IS LEFT AS AN EXERCISE TO THE READER TO PROVE THAT TWO INTER-   C
C   POLATIONS IN THE J-DIRECTION AND FINALLY ONE IN THE I-DIRECTION    C
C   WOULD GIVE THE SAME RESULT.                                        C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
       END
      SUBROUTINE BINSIZ(A1,A2,NAA,BL,BH,NB,BWID)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C         SUBROUTINE TO DETERMINE REASONABLE HISTOGRAM INTERVALS
C         GIVEN ABSOLUTE UPPER AND LOWER BOUNDS  A1 AND A2
C         AND DESIRED MAXIMUM NUMBER OF BINS NAA
C         PROGRAM MAKES REASONABLE BINNING FROM BL TO BH OF WIDTH BWID
C         F. JAMES,   AUGUST, 1974
      AL = AMIN1(A1,A2)
      AH = AMAX1(A1,A2)
      IF (AL.EQ.AH)  AH = AL + 1.
C         IF NAA .EQ. -1 , PROGRAM USES BWID INPUT FROM CALLING ROUTINE
      IF (NAA .EQ. -1)  GO TO 150
   10 NA = NAA - 1
      IF (NA .LT. 1)  NA = 1
C          GET NOMINAL BIN WIDTH IN EXPON FORM
   20 AWID = (AH-AL)/FLOAT(NA)
      LOG = DLOG10(AWID)
      IF (AWID .LE. 1.0)  LOG=LOG-1
      SIGFIG = AWID * (10.00 **(-LOG))
C         ROUND MANTISSA UP TO 2, 2.5, 5, OR 10
      IF(SIGFIG .GT. 2.0)  GO TO 40
      SIGRND = 2.0
      GO TO 100
   40 IF (SIGFIG .GT. 2.5)  GO TO 50
      SIGRND = 2.5
      GO TO 100
   50 IF(SIGFIG .GT. 5.0)  GO TO 60
      SIGRND =5.0
      GO TO 100
   60 SIGRND = 1.0
      LOG = LOG + 1
  100 CONTINUE
      BWID = SIGRND*10.0**LOG
      GO TO 200
C         GET NEW BOUNDS FROM NEW WIDTH BWID
  150 IF (BWID .LE. 0.)  GO TO 10
  200 CONTINUE
      ALB = AL/BWID
      LWID=ALB
      IF (ALB .LT. 0.0)  LWID=LWID-1
      BL = BWID*FLOAT(LWID)
      ALB = AH/BWID + 1.0
      KWID = ALB
      IF (ALB .LT. 0.0)  KWID=KWID-1
      BH = BWID*FLOAT(KWID)
      NB = KWID-LWID
      IF (NAA .GT. 5)  GO TO 240
      IF (NAA .EQ. -1)  RETURN
C          REQUEST FOR ONE BIN IS DIFFICULT CASE
      IF (NAA .GT. 1 .OR. NB .EQ. 1)  RETURN
      BWID =  BWID*2.0
       NB  = 1
       RETURN
  240 IF (2*NB .NE. NAA)  RETURN
      NA = NA + 1
      GO TO 20
      END
      SUBROUTINE UCOPY(NA,NB,N)
      DIMENSION NA(N),NB(N)
      DO I=1,N
      NB(I)=NA(I)
      END DO
      RETURN
      END
      SUBROUTINE UCOPY1(A,B,N)
      DOUBLE PRECISION A,B
      DIMENSION A(N),B(N)
      DO I=1,N
      B(I)=A(I)
      END DO
      RETURN
      END
